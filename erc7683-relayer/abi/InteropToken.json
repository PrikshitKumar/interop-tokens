{
  "abi": [
    {
      "type": "function",
      "name": "allowance",
      "inputs": [
        { "name": "_owner", "type": "address", "internalType": "address" },
        { "name": "_spender", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "approve",
      "inputs": [
        { "name": "_spender", "type": "address", "internalType": "address" },
        { "name": "_amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "balanceOf",
      "inputs": [
        { "name": "_userAddress", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "batchBurn",
      "inputs": [
        {
          "name": "_userAddresses",
          "type": "address[]",
          "internalType": "address[]"
        },
        { "name": "_amounts", "type": "uint256[]", "internalType": "uint256[]" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "batchMint",
      "inputs": [
        { "name": "_toList", "type": "address[]", "internalType": "address[]" },
        { "name": "_amounts", "type": "uint256[]", "internalType": "uint256[]" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "batchTransfer",
      "inputs": [
        { "name": "_toList", "type": "address[]", "internalType": "address[]" },
        { "name": "_amounts", "type": "uint256[]", "internalType": "uint256[]" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "burn",
      "inputs": [
        {
          "name": "_userAddress",
          "type": "address",
          "internalType": "address"
        },
        { "name": "_amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "cancel",
      "inputs": [
        { "name": "orderId", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "confirm",
      "inputs": [
        { "name": "orderId", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "decimals",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint8", "internalType": "uint8" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "decode7683FillInstruction",
      "inputs": [
        { "name": "fillInstruction", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct FillInstruction",
          "components": [
            {
              "name": "destinationChainId",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "destinationSettler",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            { "name": "originData", "type": "bytes", "internalType": "bytes" }
          ]
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "decode7683OrderData",
      "inputs": [
        { "name": "orderData", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct TokenStorage.OrderData",
          "components": [
            { "name": "to", "type": "address", "internalType": "address" },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            {
              "name": "destinationChainId",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "feeToken",
              "type": "address",
              "internalType": "address"
            },
            { "name": "feeValue", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "decreaseAllowance",
      "inputs": [
        { "name": "_spender", "type": "address", "internalType": "address" },
        {
          "name": "_subtractedValue",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "fill",
      "inputs": [
        { "name": "orderId", "type": "bytes32", "internalType": "bytes32" },
        { "name": "originData", "type": "bytes", "internalType": "bytes" },
        { "name": "fillerData", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "increaseAllowance",
      "inputs": [
        { "name": "_spender", "type": "address", "internalType": "address" },
        { "name": "_addedValue", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "init",
      "inputs": [
        {
          "name": "_initialOwner",
          "type": "address",
          "internalType": "address"
        },
        { "name": "_name", "type": "string", "internalType": "string" },
        { "name": "_symbol", "type": "string", "internalType": "string" },
        { "name": "_decimals", "type": "uint8", "internalType": "uint8" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "mint",
      "inputs": [
        { "name": "_to", "type": "address", "internalType": "address" },
        { "name": "_amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "name",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "open",
      "inputs": [
        {
          "name": "order",
          "type": "tuple",
          "internalType": "struct OnchainCrossChainOrder",
          "components": [
            {
              "name": "fillDeadline",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "orderDataType",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            { "name": "orderData", "type": "bytes", "internalType": "bytes" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pause",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pendingOrders",
      "inputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "outputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        {
          "name": "orderData",
          "type": "tuple",
          "internalType": "struct TokenStorage.OrderData",
          "components": [
            { "name": "to", "type": "address", "internalType": "address" },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            {
              "name": "destinationChainId",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "feeToken",
              "type": "address",
              "internalType": "address"
            },
            { "name": "feeValue", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "renounceOwnership",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "resolve",
      "inputs": [
        {
          "name": "order",
          "type": "tuple",
          "internalType": "struct OnchainCrossChainOrder",
          "components": [
            {
              "name": "fillDeadline",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "orderDataType",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            { "name": "orderData", "type": "bytes", "internalType": "bytes" }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct ResolvedCrossChainOrder",
          "components": [
            { "name": "user", "type": "address", "internalType": "address" },
            {
              "name": "originChainId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "openDeadline",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "fillDeadline",
              "type": "uint32",
              "internalType": "uint32"
            },
            { "name": "orderId", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "maxSpent",
              "type": "tuple[]",
              "internalType": "struct Output[]",
              "components": [
                {
                  "name": "token",
                  "type": "bytes32",
                  "internalType": "bytes32"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "recipient",
                  "type": "bytes32",
                  "internalType": "bytes32"
                },
                {
                  "name": "chainId",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "minReceived",
              "type": "tuple[]",
              "internalType": "struct Output[]",
              "components": [
                {
                  "name": "token",
                  "type": "bytes32",
                  "internalType": "bytes32"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "recipient",
                  "type": "bytes32",
                  "internalType": "bytes32"
                },
                {
                  "name": "chainId",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "fillInstructions",
              "type": "tuple[]",
              "internalType": "struct FillInstruction[]",
              "components": [
                {
                  "name": "destinationChainId",
                  "type": "uint64",
                  "internalType": "uint64"
                },
                {
                  "name": "destinationSettler",
                  "type": "bytes32",
                  "internalType": "bytes32"
                },
                {
                  "name": "originData",
                  "type": "bytes",
                  "internalType": "bytes"
                }
              ]
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "setName",
      "inputs": [
        { "name": "_name", "type": "string", "internalType": "string" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setSymbol",
      "inputs": [
        { "name": "_symbol", "type": "string", "internalType": "string" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "symbol",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalSupply",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transfer",
      "inputs": [
        { "name": "_to", "type": "address", "internalType": "address" },
        { "name": "_amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferFrom",
      "inputs": [
        { "name": "_from", "type": "address", "internalType": "address" },
        { "name": "_to", "type": "address", "internalType": "address" },
        { "name": "_amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        { "name": "newOwner", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "unpause",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "version",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "pure"
    },
    {
      "type": "event",
      "name": "Approval",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "spender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "value",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Cancel",
      "inputs": [
        {
          "name": "orderId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Confirm",
      "inputs": [
        {
          "name": "orderId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Fill",
      "inputs": [
        {
          "name": "orderId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Open",
      "inputs": [
        {
          "name": "orderId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "resolvedOrder",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct ResolvedCrossChainOrder",
          "components": [
            { "name": "user", "type": "address", "internalType": "address" },
            {
              "name": "originChainId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "openDeadline",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "fillDeadline",
              "type": "uint32",
              "internalType": "uint32"
            },
            { "name": "orderId", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "maxSpent",
              "type": "tuple[]",
              "internalType": "struct Output[]",
              "components": [
                {
                  "name": "token",
                  "type": "bytes32",
                  "internalType": "bytes32"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "recipient",
                  "type": "bytes32",
                  "internalType": "bytes32"
                },
                {
                  "name": "chainId",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "minReceived",
              "type": "tuple[]",
              "internalType": "struct Output[]",
              "components": [
                {
                  "name": "token",
                  "type": "bytes32",
                  "internalType": "bytes32"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "recipient",
                  "type": "bytes32",
                  "internalType": "bytes32"
                },
                {
                  "name": "chainId",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "fillInstructions",
              "type": "tuple[]",
              "internalType": "struct FillInstruction[]",
              "components": [
                {
                  "name": "destinationChainId",
                  "type": "uint64",
                  "internalType": "uint64"
                },
                {
                  "name": "destinationSettler",
                  "type": "bytes32",
                  "internalType": "bytes32"
                },
                {
                  "name": "originData",
                  "type": "bytes",
                  "internalType": "bytes"
                }
              ]
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        {
          "name": "previousOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Paused",
      "inputs": [
        {
          "name": "_userAddress",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Transfer",
      "inputs": [
        {
          "name": "from",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "value",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Unpaused",
      "inputs": [
        {
          "name": "_userAddress",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "UpdatedTokenInformation",
      "inputs": [
        {
          "name": "_newName",
          "type": "string",
          "indexed": true,
          "internalType": "string"
        },
        {
          "name": "_newSymbol",
          "type": "string",
          "indexed": true,
          "internalType": "string"
        },
        {
          "name": "_newDecimals",
          "type": "uint8",
          "indexed": false,
          "internalType": "uint8"
        },
        {
          "name": "_newVersion",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        }
      ],
      "anonymous": false
    },
    { "type": "error", "name": "InvalidInitialization", "inputs": [] },
    { "type": "error", "name": "NotInitializing", "inputs": [] },
    {
      "type": "error",
      "name": "OrderNotPending",
      "inputs": [
        { "name": "orderId", "type": "bytes32", "internalType": "bytes32" }
      ]
    },
    {
      "type": "error",
      "name": "OwnableInvalidOwner",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "OwnableUnauthorizedAccount",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" }
      ]
    },
    { "type": "error", "name": "ReentrancyGuardReentrantCall", "inputs": [] },
    {
      "type": "error",
      "name": "UnauthorizedFiller",
      "inputs": [
        { "name": "sender", "type": "address", "internalType": "address" },
        { "name": "filler", "type": "address", "internalType": "address" }
      ]
    },
    { "type": "error", "name": "WrongOrderType", "inputs": [] }
  ],
  "bytecode": {
    "object": "0x60a06040526005805461ff00191690557f8ebd7f9ebdeca74f331f7721f043d22079b0c7b60a8380dc989ed502592a433a608052600780546001600160a01b031916737fa9385be102ac3eac297483dd6233d62b3e14961790553480156063575f5ffd5b506001603955608051612f346100815f395f610bae0152612f345ff3fe608060405234801561000f575f5ffd5b50600436106101fd575f3560e01c8063715018a6116101145780639dc29fac116100a9578063c47f002711610079578063c47f0027146104e5578063c4d252f5146104f8578063dd62ed3e1461050b578063e917a96214610543578063f2fde38b14610556575f5ffd5b80639dc29fac14610499578063a457c2d7146104ac578063a9059cbb146104bf578063b84c8246146104d2575f5ffd5b80638456cb59116100e45780638456cb591461045657806388d695b21461045e5780638da5cb5b1461047157806395d89b4114610491575f5ffd5b8063715018a61461039e578063797af627146103a65780637b55766f146103b957806382e2c43f14610443575f5ffd5b80633f4ba83a1161019557806354fd4d501161016557806354fd4d50146103125780635788015a146103335780635c975abb14610353578063685731071461036357806370a0823114610376575f5ffd5b80633f4ba83a146102c457806340c10f19146102cc57806341b477dd146102df5780634a6cc677146102ff575f5ffd5b806325db3796116101d057806325db379614610267578063313ce56714610287578063395093511461029c5780633bf73798146102af575f5ffd5b806306fdde0314610201578063095ea7b31461021f57806318160ddd1461024257806323b872dd14610254575b5f5ffd5b610209610569565b6040516102169190611fec565b60405180910390f35b61023261022d366004612012565b6105f9565b6040519015158152602001610216565b6002545b604051908152602001610216565b61023261026236600461203c565b61060f565b61027a61027536600461218c565b6106f0565b6040516102169190612209565b60055460405160ff9091168152602001610216565b6102326102aa366004612012565b61071f565b6102c26102bd366004612239565b610755565b005b6102c2610aa7565b6102c26102da366004612012565b610b3e565b6102f26102ed3660046122c5565b610b54565b60405161021691906123b5565b6102c261030d3660046124b5565b610ef2565b6040805180820190915260058152640312e302e360dc1b6020820152610209565b61034661034136600461218c565b610f53565b6040516102169190612563565b600554610100900460ff16610232565b6102c26103713660046124b5565b610f8f565b610246610384366004612571565b6001600160a01b03165f9081526020819052604090205490565b6102c2610fe9565b6102c26103b436600461258c565b610ffc565b6104356103c736600461258c565b600660209081525f9182526040918290208054835160a08101855260018301546001600160a01b03908116825260028401549482019490945260038301546001600160401b03811695820195909552600160401b909404831660608501526004909101546080840152169082565b6040516102169291906125a3565b6102c26104513660046125fd565b611114565b6102c261121a565b6102c261046c3660046124b5565b611289565b6104796112e4565b6040516001600160a01b039091168152602001610216565b610209611312565b6102c26104a7366004612012565b611321565b6102326104ba366004612012565b6113a0565b6102326104cd366004612012565b6113d6565b6102c26104e0366004612674565b611460565b6102c26104f3366004612674565b611578565b6102c261050636600461258c565b611603565b6102466105193660046126b2565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6102c26105513660046122c5565b61179f565b6102c2610564366004612571565b6119aa565b606060038054610578906126e9565b80601f01602080910402602001604051908101604052809291908181526020018280546105a4906126e9565b80156105ef5780601f106105c6576101008083540402835291602001916105ef565b820191905f5260205f20905b8154815290600101906020018083116105d257829003601f168201915b5050505050905090565b5f6106053384846119e4565b5060015b92915050565b6005545f90610100900460ff16156106425760405162461bcd60e51b815260040161063990612721565b60405180910390fd5b6001600160a01b0384165f908152602081905260409020548211156106a05760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742042616c616e636560601b6044820152606401610639565b6001600160a01b0384165f908152600160209081526040808320338085529252909120546106da9186916106d590869061275f565b6119e4565b6106e5848484611b08565b5060015b9392505050565b60408051606080820183525f808352602083015291810191909152818060200190518101906106099190612827565b335f8181526001602090815260408083206001600160a01b038716845290915281205490916106059185906106d5908690612858565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff1615906001600160401b03165f811580156107995750825b90505f826001600160401b031660011480156107b45750303b155b9050811580156107c2575080155b156107e05760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561080a57845460ff60401b1916600160401b1785555b5f6108136112e4565b6001600160a01b03161461085f5760405162461bcd60e51b8152602060048201526013602482015272185b1c9958591e481a5b9a5d1a585b1a5e9959606a1b6044820152606401610639565b6040516020016108799060208082525f9082015260400190565b60405160208183030381529060405280519060200120886040516020016108a09190611fec565b604051602081830303815290604052805190602001201415801561091957506040516020016108d99060208082525f9082015260400190565b60405160208183030381529060405280519060200120876040516020016109009190611fec565b6040516020818303038152906040528051906020012014155b6109355760405162461bcd60e51b81526004016106399061286b565b60128660ff1611156109895760405162461bcd60e51b815260206004820152601960248201527f646563696d616c73206265747765656e203020616e64203138000000000000006044820152606401610639565b61099289611c70565b6109a533683635c9adc5dea00000610b3e565b60036109b189826128e6565b5060046109be88826128e6565b506005805460ff191660ff88161790556040516109dd906004906129a0565b604051809103902060036040516109f491906129a0565b60408051918290038220600580548484018452908452640312e302e360dc1b6020850152915190927ff3b81f721430b8815a2a07357fdaf57531529be79ed5703c2f3c908287236d1d92610a4e9260ff9091169190612a11565b60405180910390a38315610a9c57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050565b610aaf611c81565b600554610100900460ff16610afd5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610639565b6005805461ff00191690556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa906020015b60405180910390a1565b610b46611c81565b610b508282611cb3565b5050565b610bac6040518061010001604052805f6001600160a01b031681526020015f81526020015f63ffffffff1681526020015f63ffffffff1681526020015f81526020016060815260200160608152602001606081525090565b7f0000000000000000000000000000000000000000000000000000000000000000826020013514610bf05760405163bef31f6b60e01b815260040160405180910390fd5b5f610c3a610c016040850185612a2c565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610f5392505050565b6040805160018082528183019092529192505f9190816020015b610c7b60405180608001604052805f81526020015f81526020015f81526020015f81525090565b815260200190600190039081610c545750506040805160018082528183019092529192505f9190602082015b610cce60405180608001604052805f81526020015f81526020015f81526020015f81525090565b815260200190600190039081610ca75750506040805160018082528183019092529192505f9190602082015b60408051606080820183525f808352602083015291810191909152815260200190600190039081610cfa5790505090506040518060800160405280610d4986606001516001600160a01b031690565b815260200185608001518152602001610d6b865f01516001600160a01b031690565b815260200185604001516001600160401b0316815250835f81518110610d9357610d93612a6e565b60200260200101819052506040518060800160405280610db9306001600160a01b031690565b8152602086810151908201526040015f815260200146815250825f81518110610de457610de4612a6e565b6020026020010181905250604051806060016040528085604001516001600160401b03168152602001610e1d306001600160a01b031690565b8152602001610e2f6040890189612a2c565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201829052509390945250508351849250610e7557610e75612a6e565b6020026020010181905250604051806101000160405280336001600160a01b0316815260200146815260200163ffffffff80168152602001875f016020810190610ebf9190612a93565b63ffffffff168152602001610ed2611d8a565b815260200184815260200183815260200182815250945050505050919050565b5f5b83811015610f4c57610f44858583818110610f1157610f11612a6e565b9050602002016020810190610f269190612571565b848484818110610f3857610f38612a6e565b90506020020135611321565b600101610ef4565b5050505050565b6040805160a0810182525f8082526020808301829052928201819052606082018190526080820152825190916106099184018101908401612ab9565b5f5b83811015610f4c57610fe1858583818110610fae57610fae612a6e565b9050602002016020810190610fc39190612571565b848484818110610fd557610fd5612a6e565b90506020020135610b3e565b600101610f91565b610ff1611c81565b610ffa5f611de5565b565b611004611e55565b6007546001600160a01b0316331461104457600754604051639946bd5360e01b81523360048201526001600160a01b039091166024820152604401610639565b5f818152600660205260409020546001600160a01b03166110995760405162461bcd60e51b815260206004820152600f60248201526e13dc99195c881b9bdd08199bdd5b99608a1b6044820152606401610639565b5f8181526006602052604080822080546001600160a01b031990811682556001820180549091169055600281018390556003810180546001600160e01b03191690556004018290555182917f94d94affe11eeecd469f8d64826f21e58723e70a2d6f0a69d3475ec3f6ff6f6891a26111116001603955565b50565b61111c611e55565b6007546001600160a01b0316331461115c57600754604051639946bd5360e01b81523360048201526001600160a01b039091166024820152604401610639565b5f858152600660205260409020546001600160a01b03166111935760405163b0ec289d60e01b815260048101869052602401610639565b5f6111d285858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610f5392505050565b90506111e5815f01518260200151611cb3565b60405186907fddbfc9ff3f03002e3d81f56bc885f7e8a3b00e16b50939c32405d366c0bd5aa2905f90a250610f4c6001603955565b611222611c81565b600554610100900460ff161561124a5760405162461bcd60e51b815260040161063990612721565b6005805461ff0019166101001790556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602001610b34565b5f5b83811015610f4c576112db8585838181106112a8576112a8612a6e565b90506020020160208101906112bd9190612571565b8484848181106112cf576112cf612a6e565b905060200201356113d6565b5060010161128b565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b606060048054610578906126e9565b611329611c81565b80611348836001600160a01b03165f9081526020819052604090205490565b10156113965760405162461bcd60e51b815260206004820152601d60248201527f63616e6e6f74206275726e206d6f7265207468616e2062616c616e63650000006044820152606401610639565b610b508282611e7f565b335f8181526001602090815260408083206001600160a01b038716845290915281205490916106059185906106d590869061275f565b6005545f90610100900460ff16156114005760405162461bcd60e51b815260040161063990612721565b335f908152602081905260409020548211156114555760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742042616c616e636560601b6044820152606401610639565b610605338484611b08565b611468611c81565b6040516020016114829060208082525f9082015260400190565b6040516020818303038152906040528051906020012082826040516020016114ab929190612b66565b60405160208183030381529060405280519060200120036114de5760405162461bcd60e51b81526004016106399061286b565b60046114eb828483612b79565b5060046040516114fb91906129a0565b6040518091039020600360405161151291906129a0565b60408051918290038220600580548484018452908452640312e302e360dc1b6020850152915190927ff3b81f721430b8815a2a07357fdaf57531529be79ed5703c2f3c908287236d1d9261156c9260ff9091169190612a11565b60405180910390a35050565b611580611c81565b60405160200161159a9060208082525f9082015260400190565b6040516020818303038152906040528051906020012082826040516020016115c3929190612b66565b60405160208183030381529060405280519060200120036115f65760405162461bcd60e51b81526004016106399061286b565b60036114eb828483612b79565b61160b611e55565b6007546001600160a01b0316331461164b57600754604051639946bd5360e01b81523360048201526001600160a01b039091166024820152604401610639565b5f81815260066020526040812060020154900361169c5760405162461bcd60e51b815260206004820152600f60248201526e13dc99195c881b9bdd08199bdd5b99608a1b6044820152606401610639565b5f818152600660209081526040918290208251808401845281546001600160a01b039081168252845160a081018652600184015482168152600284015481860190815260038501546001600160401b03811697830197909752600160401b909604909116606082015260049092015460808301529182015280519151909161172691309190611b08565b5f8281526006602052604080822080546001600160a01b031990811682556001820180549091169055600281018390556003810180546001600160e01b03191690556004018290555183917fe8d9861dbc9c663ed3accd261bbe2fe01e0d3d9e5f51fa38523b265c7757a93a91a2506111116001603955565b6117a7611e55565b5f6117b8610c016040840184612a2c565b6040516341b477dd60e01b81529091505f9030906341b477dd906117e0908690600401612c32565b5f60405180830381865afa1580156117fa573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526118219190810190612df8565b60808101515f908152600660205260409020549091506001600160a01b0316156118855760405162461bcd60e51b81526020600482015260156024820152744f7264657220616c72656164792070656e64696e6760581b6044820152606401610639565b6040805180820182523380825260208083018681526080808701515f90815260068452869020855181546001600160a01b039182166001600160a01b0319918216178355935180516001840180549184169190961617909455838501516002830155968301516003820180546060860151909916600160401b026001600160e01b03199099166001600160401b039092169190911797909717909655015160049094019390935591840151909161193d913090611b08565b8160e001515f8151811061195357611953612a6e565b602002602001015160400151805190602001207fa576d0af275d0c6207ef43ceee8c498a5d7a26b8157a32d3fdf361e64371628c8360405161199591906123b5565b60405180910390a25050506111116001603955565b6119b2611c81565b6001600160a01b0381166119db57604051631e4fbdf760e01b81525f6004820152602401610639565b61111181611de5565b6001600160a01b038316611a465760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610639565b6001600160a01b038216611aa75760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610639565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038316611b6c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610639565b6001600160a01b038216611bce5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610639565b6001600160a01b0383165f90815260208190526040902054611bf190829061275f565b6001600160a01b038085165f908152602081905260408082209390935590841681522054611c20908290612858565b6001600160a01b038381165f818152602081815260409182902094909455518481529092918616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101611afb565b611c78611f6d565b61111181611fb6565b33611c8a6112e4565b6001600160a01b031614610ffa5760405163118cdaa760e01b8152336004820152602401610639565b6001600160a01b038216611d095760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610639565b80600254611d179190612858565b6002556001600160a01b0382165f90815260208190526040902054611d3d908290612858565b6001600160a01b0383165f81815260208181526040808320949094559251848152919290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910161156c565b5f42443343604051602001611dca9493929190938452602084019290925260601b6bffffffffffffffffffffffff19166040830152605482015260740190565b60405160208183030381529060405280519060200120905090565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b600260395403611e7857604051633ee5aeb560e01b815260040160405180910390fd5b6002603955565b6001600160a01b038216611edf5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610639565b6001600160a01b0382165f90815260208190526040902054611f0290829061275f565b6001600160a01b0383165f90815260208190526040902055600254611f2890829061275f565b6002556040518181525f906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161156c565b505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff16610ffa57604051631afcd79f60e31b815260040160405180910390fd5b6119b2611f6d565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f6106e96020830184611fbe565b6001600160a01b0381168114611111575f5ffd5b5f5f60408385031215612023575f5ffd5b823561202e81611ffe565b946020939093013593505050565b5f5f5f6060848603121561204e575f5ffd5b833561205981611ffe565b9250602084013561206981611ffe565b929592945050506040919091013590565b634e487b7160e01b5f52604160045260245ffd5b604051606081016001600160401b03811182821017156120b0576120b061207a565b60405290565b604051608081016001600160401b03811182821017156120b0576120b061207a565b60405161010081016001600160401b03811182821017156120b0576120b061207a565b604051601f8201601f191681016001600160401b03811182821017156121235761212361207a565b604052919050565b5f6001600160401b038211156121435761214361207a565b50601f01601f191660200190565b5f61216361215e8461212b565b6120fb565b9050828152838383011115612176575f5ffd5b828260208301375f602084830101529392505050565b5f6020828403121561219c575f5ffd5b81356001600160401b038111156121b1575f5ffd5b8201601f810184136121c1575f5ffd5b6121d084823560208401612151565b949350505050565b6001600160401b038151168252602081015160208301525f6040820151606060408501526121d06060850182611fbe565b602081525f6106e960208301846121d8565b5f82601f83011261222a575f5ffd5b6106e983833560208501612151565b5f5f5f5f6080858703121561224c575f5ffd5b843561225781611ffe565b935060208501356001600160401b03811115612271575f5ffd5b61227d8782880161221b565b93505060408501356001600160401b03811115612298575f5ffd5b6122a48782880161221b565b925050606085013560ff811681146122ba575f5ffd5b939692955090935050565b5f602082840312156122d5575f5ffd5b81356001600160401b038111156122ea575f5ffd5b8201606081850312156106e9575f5ffd5b5f8151808452602084019350602083015f5b82811015612351578151805187526020810151602088015260408101516040880152606081015160608801525060808601955060208201915060018101905061230d565b5093949350505050565b5f82825180855260208501945060208160051b830101602085015f5b838110156123a957601f198584030188526123938383516121d8565b6020988901989093509190910190600101612377565b50909695505050505050565b602081526123cf6020820183516001600160a01b03169052565b602082015160408201525f60408301516123f1606084018263ffffffff169052565b50606083015163ffffffff8116608084015250608083015160a083015260a083015161010060c08401526124296101208401826122fb565b905060c0840151601f198483030160e085015261244682826122fb565b91505060e0840151601f1984830301610100850152612465828261235b565b95945050505050565b5f5f83601f84011261247e575f5ffd5b5081356001600160401b03811115612494575f5ffd5b6020830191508360208260051b85010111156124ae575f5ffd5b9250929050565b5f5f5f5f604085870312156124c8575f5ffd5b84356001600160401b038111156124dd575f5ffd5b6124e98782880161246e565b90955093505060208501356001600160401b03811115612507575f5ffd5b6125138782880161246e565b95989497509550505050565b80516001600160a01b039081168352602080830151908401526040808301516001600160401b03169084015260608083015190911690830152608090810151910152565b60a08101610609828461251f565b5f60208284031215612581575f5ffd5b81356106e981611ffe565b5f6020828403121561259c575f5ffd5b5035919050565b6001600160a01b038316815260c081016106e9602083018461251f565b5f5f83601f8401126125d0575f5ffd5b5081356001600160401b038111156125e6575f5ffd5b6020830191508360208285010111156124ae575f5ffd5b5f5f5f5f5f60608688031215612611575f5ffd5b8535945060208601356001600160401b0381111561262d575f5ffd5b612639888289016125c0565b90955093505060408601356001600160401b03811115612657575f5ffd5b612663888289016125c0565b969995985093965092949392505050565b5f5f60208385031215612685575f5ffd5b82356001600160401b0381111561269a575f5ffd5b6126a6858286016125c0565b90969095509350505050565b5f5f604083850312156126c3575f5ffd5b82356126ce81611ffe565b915060208301356126de81611ffe565b809150509250929050565b600181811c908216806126fd57607f821691505b60208210810361271b57634e487b7160e01b5f52602260045260245ffd5b50919050565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b634e487b7160e01b5f52601160045260245ffd5b818103818111156106095761060961274b565b80516001600160401b0381168114612788575f5ffd5b919050565b5f6060828403121561279d575f5ffd5b6127a561208e565b90506127b082612772565b81526020828101519082015260408201516001600160401b038111156127d4575f5ffd5b8201601f810184136127e4575f5ffd5b80516127f261215e8261212b565b818152856020838501011115612806575f5ffd5b8160208401602083015e5f6020838301015280604085015250505092915050565b5f60208284031215612837575f5ffd5b81516001600160401b0381111561284c575f5ffd5b6121d08482850161278d565b808201808211156106095761060961274b565b6020808252601f908201527f696e76616c696420617267756d656e74202d20656d70747920737472696e6700604082015260600190565b601f821115611f6857805f5260205f20601f840160051c810160208510156128c75750805b601f840160051c820191505b81811015610f4c575f81556001016128d3565b81516001600160401b038111156128ff576128ff61207a565b6129138161290d84546126e9565b846128a2565b6020601f821160018114612945575f831561292e5750848201515b5f19600385901b1c1916600184901b178455610f4c565b5f84815260208120601f198516915b828110156129745787850151825560209485019460019092019101612954565b508482101561299157868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b5f5f83546129ad816126e9565b6001821680156129c457600181146129d957612a06565b60ff1983168652811515820286019350612a06565b865f5260205f205f5b838110156129fe578154888201526001909101906020016129e2565b505081860193505b509195945050505050565b60ff83168152604060208201525f6121d06040830184611fbe565b5f5f8335601e19843603018112612a41575f5ffd5b8301803591506001600160401b03821115612a5a575f5ffd5b6020019150368190038213156124ae575f5ffd5b634e487b7160e01b5f52603260045260245ffd5b63ffffffff81168114611111575f5ffd5b5f60208284031215612aa3575f5ffd5b81356106e981612a82565b805161278881611ffe565b5f60a0828403128015612aca575f5ffd5b5060405160a081016001600160401b0381118282101715612aed57612aed61207a565b6040528251612afb81611ffe565b815260208381015190820152612b1360408401612772565b60408201526060830151612b2681611ffe565b60608201526080928301519281019290925250919050565b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b602081525f6121d0602083018486612b3e565b6001600160401b03831115612b9057612b9061207a565b612ba483612b9e83546126e9565b836128a2565b5f601f841160018114612bd5575f8515612bbe5750838201355b5f19600387901b1c1916600186901b178355610f4c565b5f83815260208120601f198716915b82811015612c045786850135825560209485019460019092019101612be4565b5086821015612c20575f1960f88860031b161c19848701351681555b505060018560011b0183555050505050565b602081525f8235612c4281612a82565b63ffffffff1660208381019190915283013560408084019190915283013536849003601e19018112612c72575f5ffd5b83016020810190356001600160401b03811115612c8d575f5ffd5b803603821315612c9b575f5ffd5b606080850152612465608085018284612b3e565b805161278881612a82565b5f6001600160401b03821115612cd257612cd261207a565b5060051b60200190565b5f82601f830112612ceb575f5ffd5b8151612cf961215e82612cba565b8082825260208201915060208360071b860101925085831115612d1a575f5ffd5b602085015b83811015612d705760808188031215612d36575f5ffd5b612d3e6120b6565b815181526020808301518183015260408084015190830152606080840151908301529084529290920191608001612d1f565b5095945050505050565b5f82601f830112612d89575f5ffd5b8151612d9761215e82612cba565b8082825260208201915060208360051b860101925085831115612db8575f5ffd5b602085015b83811015612d705780516001600160401b03811115612dda575f5ffd5b612de9886020838a010161278d565b84525060209283019201612dbd565b5f60208284031215612e08575f5ffd5b81516001600160401b03811115612e1d575f5ffd5b82016101008185031215612e2f575f5ffd5b612e376120d8565b612e4082612aae565b815260208281015190820152612e5860408301612caf565b6040820152612e6960608301612caf565b60608201526080828101519082015260a08201516001600160401b03811115612e90575f5ffd5b612e9c86828501612cdc565b60a08301525060c08201516001600160401b03811115612eba575f5ffd5b612ec686828501612cdc565b60c08301525060e08201516001600160401b03811115612ee4575f5ffd5b612ef086828501612d7a565b60e08301525094935050505056fea2646970667358221220c23d01579f8ba67da227a08590c57d97a7d604988598bb3193b11decadf97fc764736f6c634300081c0033",
    "sourceMap": "558:16159:31:-:0;;;507:34:32;;;-1:-1:-1;;507:34:32;;;899:80;850:129;;1093:85;;;-1:-1:-1;;;;;;1093:85:32;1135:42;1093:85;;;558:16159:31;;;;;;;;;-1:-1:-1;1857:1:29;2061:7;:21;558:16159:31;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561000f575f5ffd5b50600436106101fd575f3560e01c8063715018a6116101145780639dc29fac116100a9578063c47f002711610079578063c47f0027146104e5578063c4d252f5146104f8578063dd62ed3e1461050b578063e917a96214610543578063f2fde38b14610556575f5ffd5b80639dc29fac14610499578063a457c2d7146104ac578063a9059cbb146104bf578063b84c8246146104d2575f5ffd5b80638456cb59116100e45780638456cb591461045657806388d695b21461045e5780638da5cb5b1461047157806395d89b4114610491575f5ffd5b8063715018a61461039e578063797af627146103a65780637b55766f146103b957806382e2c43f14610443575f5ffd5b80633f4ba83a1161019557806354fd4d501161016557806354fd4d50146103125780635788015a146103335780635c975abb14610353578063685731071461036357806370a0823114610376575f5ffd5b80633f4ba83a146102c457806340c10f19146102cc57806341b477dd146102df5780634a6cc677146102ff575f5ffd5b806325db3796116101d057806325db379614610267578063313ce56714610287578063395093511461029c5780633bf73798146102af575f5ffd5b806306fdde0314610201578063095ea7b31461021f57806318160ddd1461024257806323b872dd14610254575b5f5ffd5b610209610569565b6040516102169190611fec565b60405180910390f35b61023261022d366004612012565b6105f9565b6040519015158152602001610216565b6002545b604051908152602001610216565b61023261026236600461203c565b61060f565b61027a61027536600461218c565b6106f0565b6040516102169190612209565b60055460405160ff9091168152602001610216565b6102326102aa366004612012565b61071f565b6102c26102bd366004612239565b610755565b005b6102c2610aa7565b6102c26102da366004612012565b610b3e565b6102f26102ed3660046122c5565b610b54565b60405161021691906123b5565b6102c261030d3660046124b5565b610ef2565b6040805180820190915260058152640312e302e360dc1b6020820152610209565b61034661034136600461218c565b610f53565b6040516102169190612563565b600554610100900460ff16610232565b6102c26103713660046124b5565b610f8f565b610246610384366004612571565b6001600160a01b03165f9081526020819052604090205490565b6102c2610fe9565b6102c26103b436600461258c565b610ffc565b6104356103c736600461258c565b600660209081525f9182526040918290208054835160a08101855260018301546001600160a01b03908116825260028401549482019490945260038301546001600160401b03811695820195909552600160401b909404831660608501526004909101546080840152169082565b6040516102169291906125a3565b6102c26104513660046125fd565b611114565b6102c261121a565b6102c261046c3660046124b5565b611289565b6104796112e4565b6040516001600160a01b039091168152602001610216565b610209611312565b6102c26104a7366004612012565b611321565b6102326104ba366004612012565b6113a0565b6102326104cd366004612012565b6113d6565b6102c26104e0366004612674565b611460565b6102c26104f3366004612674565b611578565b6102c261050636600461258c565b611603565b6102466105193660046126b2565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6102c26105513660046122c5565b61179f565b6102c2610564366004612571565b6119aa565b606060038054610578906126e9565b80601f01602080910402602001604051908101604052809291908181526020018280546105a4906126e9565b80156105ef5780601f106105c6576101008083540402835291602001916105ef565b820191905f5260205f20905b8154815290600101906020018083116105d257829003601f168201915b5050505050905090565b5f6106053384846119e4565b5060015b92915050565b6005545f90610100900460ff16156106425760405162461bcd60e51b815260040161063990612721565b60405180910390fd5b6001600160a01b0384165f908152602081905260409020548211156106a05760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742042616c616e636560601b6044820152606401610639565b6001600160a01b0384165f908152600160209081526040808320338085529252909120546106da9186916106d590869061275f565b6119e4565b6106e5848484611b08565b5060015b9392505050565b60408051606080820183525f808352602083015291810191909152818060200190518101906106099190612827565b335f8181526001602090815260408083206001600160a01b038716845290915281205490916106059185906106d5908690612858565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff1615906001600160401b03165f811580156107995750825b90505f826001600160401b031660011480156107b45750303b155b9050811580156107c2575080155b156107e05760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561080a57845460ff60401b1916600160401b1785555b5f6108136112e4565b6001600160a01b03161461085f5760405162461bcd60e51b8152602060048201526013602482015272185b1c9958591e481a5b9a5d1a585b1a5e9959606a1b6044820152606401610639565b6040516020016108799060208082525f9082015260400190565b60405160208183030381529060405280519060200120886040516020016108a09190611fec565b604051602081830303815290604052805190602001201415801561091957506040516020016108d99060208082525f9082015260400190565b60405160208183030381529060405280519060200120876040516020016109009190611fec565b6040516020818303038152906040528051906020012014155b6109355760405162461bcd60e51b81526004016106399061286b565b60128660ff1611156109895760405162461bcd60e51b815260206004820152601960248201527f646563696d616c73206265747765656e203020616e64203138000000000000006044820152606401610639565b61099289611c70565b6109a533683635c9adc5dea00000610b3e565b60036109b189826128e6565b5060046109be88826128e6565b506005805460ff191660ff88161790556040516109dd906004906129a0565b604051809103902060036040516109f491906129a0565b60408051918290038220600580548484018452908452640312e302e360dc1b6020850152915190927ff3b81f721430b8815a2a07357fdaf57531529be79ed5703c2f3c908287236d1d92610a4e9260ff9091169190612a11565b60405180910390a38315610a9c57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050565b610aaf611c81565b600554610100900460ff16610afd5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610639565b6005805461ff00191690556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa906020015b60405180910390a1565b610b46611c81565b610b508282611cb3565b5050565b610bac6040518061010001604052805f6001600160a01b031681526020015f81526020015f63ffffffff1681526020015f63ffffffff1681526020015f81526020016060815260200160608152602001606081525090565b7f0000000000000000000000000000000000000000000000000000000000000000826020013514610bf05760405163bef31f6b60e01b815260040160405180910390fd5b5f610c3a610c016040850185612a2c565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610f5392505050565b6040805160018082528183019092529192505f9190816020015b610c7b60405180608001604052805f81526020015f81526020015f81526020015f81525090565b815260200190600190039081610c545750506040805160018082528183019092529192505f9190602082015b610cce60405180608001604052805f81526020015f81526020015f81526020015f81525090565b815260200190600190039081610ca75750506040805160018082528183019092529192505f9190602082015b60408051606080820183525f808352602083015291810191909152815260200190600190039081610cfa5790505090506040518060800160405280610d4986606001516001600160a01b031690565b815260200185608001518152602001610d6b865f01516001600160a01b031690565b815260200185604001516001600160401b0316815250835f81518110610d9357610d93612a6e565b60200260200101819052506040518060800160405280610db9306001600160a01b031690565b8152602086810151908201526040015f815260200146815250825f81518110610de457610de4612a6e565b6020026020010181905250604051806060016040528085604001516001600160401b03168152602001610e1d306001600160a01b031690565b8152602001610e2f6040890189612a2c565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201829052509390945250508351849250610e7557610e75612a6e565b6020026020010181905250604051806101000160405280336001600160a01b0316815260200146815260200163ffffffff80168152602001875f016020810190610ebf9190612a93565b63ffffffff168152602001610ed2611d8a565b815260200184815260200183815260200182815250945050505050919050565b5f5b83811015610f4c57610f44858583818110610f1157610f11612a6e565b9050602002016020810190610f269190612571565b848484818110610f3857610f38612a6e565b90506020020135611321565b600101610ef4565b5050505050565b6040805160a0810182525f8082526020808301829052928201819052606082018190526080820152825190916106099184018101908401612ab9565b5f5b83811015610f4c57610fe1858583818110610fae57610fae612a6e565b9050602002016020810190610fc39190612571565b848484818110610fd557610fd5612a6e565b90506020020135610b3e565b600101610f91565b610ff1611c81565b610ffa5f611de5565b565b611004611e55565b6007546001600160a01b0316331461104457600754604051639946bd5360e01b81523360048201526001600160a01b039091166024820152604401610639565b5f818152600660205260409020546001600160a01b03166110995760405162461bcd60e51b815260206004820152600f60248201526e13dc99195c881b9bdd08199bdd5b99608a1b6044820152606401610639565b5f8181526006602052604080822080546001600160a01b031990811682556001820180549091169055600281018390556003810180546001600160e01b03191690556004018290555182917f94d94affe11eeecd469f8d64826f21e58723e70a2d6f0a69d3475ec3f6ff6f6891a26111116001603955565b50565b61111c611e55565b6007546001600160a01b0316331461115c57600754604051639946bd5360e01b81523360048201526001600160a01b039091166024820152604401610639565b5f858152600660205260409020546001600160a01b03166111935760405163b0ec289d60e01b815260048101869052602401610639565b5f6111d285858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610f5392505050565b90506111e5815f01518260200151611cb3565b60405186907fddbfc9ff3f03002e3d81f56bc885f7e8a3b00e16b50939c32405d366c0bd5aa2905f90a250610f4c6001603955565b611222611c81565b600554610100900460ff161561124a5760405162461bcd60e51b815260040161063990612721565b6005805461ff0019166101001790556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602001610b34565b5f5b83811015610f4c576112db8585838181106112a8576112a8612a6e565b90506020020160208101906112bd9190612571565b8484848181106112cf576112cf612a6e565b905060200201356113d6565b5060010161128b565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b606060048054610578906126e9565b611329611c81565b80611348836001600160a01b03165f9081526020819052604090205490565b10156113965760405162461bcd60e51b815260206004820152601d60248201527f63616e6e6f74206275726e206d6f7265207468616e2062616c616e63650000006044820152606401610639565b610b508282611e7f565b335f8181526001602090815260408083206001600160a01b038716845290915281205490916106059185906106d590869061275f565b6005545f90610100900460ff16156114005760405162461bcd60e51b815260040161063990612721565b335f908152602081905260409020548211156114555760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742042616c616e636560601b6044820152606401610639565b610605338484611b08565b611468611c81565b6040516020016114829060208082525f9082015260400190565b6040516020818303038152906040528051906020012082826040516020016114ab929190612b66565b60405160208183030381529060405280519060200120036114de5760405162461bcd60e51b81526004016106399061286b565b60046114eb828483612b79565b5060046040516114fb91906129a0565b6040518091039020600360405161151291906129a0565b60408051918290038220600580548484018452908452640312e302e360dc1b6020850152915190927ff3b81f721430b8815a2a07357fdaf57531529be79ed5703c2f3c908287236d1d9261156c9260ff9091169190612a11565b60405180910390a35050565b611580611c81565b60405160200161159a9060208082525f9082015260400190565b6040516020818303038152906040528051906020012082826040516020016115c3929190612b66565b60405160208183030381529060405280519060200120036115f65760405162461bcd60e51b81526004016106399061286b565b60036114eb828483612b79565b61160b611e55565b6007546001600160a01b0316331461164b57600754604051639946bd5360e01b81523360048201526001600160a01b039091166024820152604401610639565b5f81815260066020526040812060020154900361169c5760405162461bcd60e51b815260206004820152600f60248201526e13dc99195c881b9bdd08199bdd5b99608a1b6044820152606401610639565b5f818152600660209081526040918290208251808401845281546001600160a01b039081168252845160a081018652600184015482168152600284015481860190815260038501546001600160401b03811697830197909752600160401b909604909116606082015260049092015460808301529182015280519151909161172691309190611b08565b5f8281526006602052604080822080546001600160a01b031990811682556001820180549091169055600281018390556003810180546001600160e01b03191690556004018290555183917fe8d9861dbc9c663ed3accd261bbe2fe01e0d3d9e5f51fa38523b265c7757a93a91a2506111116001603955565b6117a7611e55565b5f6117b8610c016040840184612a2c565b6040516341b477dd60e01b81529091505f9030906341b477dd906117e0908690600401612c32565b5f60405180830381865afa1580156117fa573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526118219190810190612df8565b60808101515f908152600660205260409020549091506001600160a01b0316156118855760405162461bcd60e51b81526020600482015260156024820152744f7264657220616c72656164792070656e64696e6760581b6044820152606401610639565b6040805180820182523380825260208083018681526080808701515f90815260068452869020855181546001600160a01b039182166001600160a01b0319918216178355935180516001840180549184169190961617909455838501516002830155968301516003820180546060860151909916600160401b026001600160e01b03199099166001600160401b039092169190911797909717909655015160049094019390935591840151909161193d913090611b08565b8160e001515f8151811061195357611953612a6e565b602002602001015160400151805190602001207fa576d0af275d0c6207ef43ceee8c498a5d7a26b8157a32d3fdf361e64371628c8360405161199591906123b5565b60405180910390a25050506111116001603955565b6119b2611c81565b6001600160a01b0381166119db57604051631e4fbdf760e01b81525f6004820152602401610639565b61111181611de5565b6001600160a01b038316611a465760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610639565b6001600160a01b038216611aa75760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610639565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038316611b6c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610639565b6001600160a01b038216611bce5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610639565b6001600160a01b0383165f90815260208190526040902054611bf190829061275f565b6001600160a01b038085165f908152602081905260408082209390935590841681522054611c20908290612858565b6001600160a01b038381165f818152602081815260409182902094909455518481529092918616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101611afb565b611c78611f6d565b61111181611fb6565b33611c8a6112e4565b6001600160a01b031614610ffa5760405163118cdaa760e01b8152336004820152602401610639565b6001600160a01b038216611d095760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610639565b80600254611d179190612858565b6002556001600160a01b0382165f90815260208190526040902054611d3d908290612858565b6001600160a01b0383165f81815260208181526040808320949094559251848152919290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910161156c565b5f42443343604051602001611dca9493929190938452602084019290925260601b6bffffffffffffffffffffffff19166040830152605482015260740190565b60405160208183030381529060405280519060200120905090565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b600260395403611e7857604051633ee5aeb560e01b815260040160405180910390fd5b6002603955565b6001600160a01b038216611edf5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610639565b6001600160a01b0382165f90815260208190526040902054611f0290829061275f565b6001600160a01b0383165f90815260208190526040902055600254611f2890829061275f565b6002556040518181525f906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161156c565b505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff16610ffa57604051631afcd79f60e31b815260040160405180910390fd5b6119b2611f6d565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f6106e96020830184611fbe565b6001600160a01b0381168114611111575f5ffd5b5f5f60408385031215612023575f5ffd5b823561202e81611ffe565b946020939093013593505050565b5f5f5f6060848603121561204e575f5ffd5b833561205981611ffe565b9250602084013561206981611ffe565b929592945050506040919091013590565b634e487b7160e01b5f52604160045260245ffd5b604051606081016001600160401b03811182821017156120b0576120b061207a565b60405290565b604051608081016001600160401b03811182821017156120b0576120b061207a565b60405161010081016001600160401b03811182821017156120b0576120b061207a565b604051601f8201601f191681016001600160401b03811182821017156121235761212361207a565b604052919050565b5f6001600160401b038211156121435761214361207a565b50601f01601f191660200190565b5f61216361215e8461212b565b6120fb565b9050828152838383011115612176575f5ffd5b828260208301375f602084830101529392505050565b5f6020828403121561219c575f5ffd5b81356001600160401b038111156121b1575f5ffd5b8201601f810184136121c1575f5ffd5b6121d084823560208401612151565b949350505050565b6001600160401b038151168252602081015160208301525f6040820151606060408501526121d06060850182611fbe565b602081525f6106e960208301846121d8565b5f82601f83011261222a575f5ffd5b6106e983833560208501612151565b5f5f5f5f6080858703121561224c575f5ffd5b843561225781611ffe565b935060208501356001600160401b03811115612271575f5ffd5b61227d8782880161221b565b93505060408501356001600160401b03811115612298575f5ffd5b6122a48782880161221b565b925050606085013560ff811681146122ba575f5ffd5b939692955090935050565b5f602082840312156122d5575f5ffd5b81356001600160401b038111156122ea575f5ffd5b8201606081850312156106e9575f5ffd5b5f8151808452602084019350602083015f5b82811015612351578151805187526020810151602088015260408101516040880152606081015160608801525060808601955060208201915060018101905061230d565b5093949350505050565b5f82825180855260208501945060208160051b830101602085015f5b838110156123a957601f198584030188526123938383516121d8565b6020988901989093509190910190600101612377565b50909695505050505050565b602081526123cf6020820183516001600160a01b03169052565b602082015160408201525f60408301516123f1606084018263ffffffff169052565b50606083015163ffffffff8116608084015250608083015160a083015260a083015161010060c08401526124296101208401826122fb565b905060c0840151601f198483030160e085015261244682826122fb565b91505060e0840151601f1984830301610100850152612465828261235b565b95945050505050565b5f5f83601f84011261247e575f5ffd5b5081356001600160401b03811115612494575f5ffd5b6020830191508360208260051b85010111156124ae575f5ffd5b9250929050565b5f5f5f5f604085870312156124c8575f5ffd5b84356001600160401b038111156124dd575f5ffd5b6124e98782880161246e565b90955093505060208501356001600160401b03811115612507575f5ffd5b6125138782880161246e565b95989497509550505050565b80516001600160a01b039081168352602080830151908401526040808301516001600160401b03169084015260608083015190911690830152608090810151910152565b60a08101610609828461251f565b5f60208284031215612581575f5ffd5b81356106e981611ffe565b5f6020828403121561259c575f5ffd5b5035919050565b6001600160a01b038316815260c081016106e9602083018461251f565b5f5f83601f8401126125d0575f5ffd5b5081356001600160401b038111156125e6575f5ffd5b6020830191508360208285010111156124ae575f5ffd5b5f5f5f5f5f60608688031215612611575f5ffd5b8535945060208601356001600160401b0381111561262d575f5ffd5b612639888289016125c0565b90955093505060408601356001600160401b03811115612657575f5ffd5b612663888289016125c0565b969995985093965092949392505050565b5f5f60208385031215612685575f5ffd5b82356001600160401b0381111561269a575f5ffd5b6126a6858286016125c0565b90969095509350505050565b5f5f604083850312156126c3575f5ffd5b82356126ce81611ffe565b915060208301356126de81611ffe565b809150509250929050565b600181811c908216806126fd57607f821691505b60208210810361271b57634e487b7160e01b5f52602260045260245ffd5b50919050565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b634e487b7160e01b5f52601160045260245ffd5b818103818111156106095761060961274b565b80516001600160401b0381168114612788575f5ffd5b919050565b5f6060828403121561279d575f5ffd5b6127a561208e565b90506127b082612772565b81526020828101519082015260408201516001600160401b038111156127d4575f5ffd5b8201601f810184136127e4575f5ffd5b80516127f261215e8261212b565b818152856020838501011115612806575f5ffd5b8160208401602083015e5f6020838301015280604085015250505092915050565b5f60208284031215612837575f5ffd5b81516001600160401b0381111561284c575f5ffd5b6121d08482850161278d565b808201808211156106095761060961274b565b6020808252601f908201527f696e76616c696420617267756d656e74202d20656d70747920737472696e6700604082015260600190565b601f821115611f6857805f5260205f20601f840160051c810160208510156128c75750805b601f840160051c820191505b81811015610f4c575f81556001016128d3565b81516001600160401b038111156128ff576128ff61207a565b6129138161290d84546126e9565b846128a2565b6020601f821160018114612945575f831561292e5750848201515b5f19600385901b1c1916600184901b178455610f4c565b5f84815260208120601f198516915b828110156129745787850151825560209485019460019092019101612954565b508482101561299157868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b5f5f83546129ad816126e9565b6001821680156129c457600181146129d957612a06565b60ff1983168652811515820286019350612a06565b865f5260205f205f5b838110156129fe578154888201526001909101906020016129e2565b505081860193505b509195945050505050565b60ff83168152604060208201525f6121d06040830184611fbe565b5f5f8335601e19843603018112612a41575f5ffd5b8301803591506001600160401b03821115612a5a575f5ffd5b6020019150368190038213156124ae575f5ffd5b634e487b7160e01b5f52603260045260245ffd5b63ffffffff81168114611111575f5ffd5b5f60208284031215612aa3575f5ffd5b81356106e981612a82565b805161278881611ffe565b5f60a0828403128015612aca575f5ffd5b5060405160a081016001600160401b0381118282101715612aed57612aed61207a565b6040528251612afb81611ffe565b815260208381015190820152612b1360408401612772565b60408201526060830151612b2681611ffe565b60608201526080928301519281019290925250919050565b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b602081525f6121d0602083018486612b3e565b6001600160401b03831115612b9057612b9061207a565b612ba483612b9e83546126e9565b836128a2565b5f601f841160018114612bd5575f8515612bbe5750838201355b5f19600387901b1c1916600186901b178355610f4c565b5f83815260208120601f198716915b82811015612c045786850135825560209485019460019092019101612be4565b5086821015612c20575f1960f88860031b161c19848701351681555b505060018560011b0183555050505050565b602081525f8235612c4281612a82565b63ffffffff1660208381019190915283013560408084019190915283013536849003601e19018112612c72575f5ffd5b83016020810190356001600160401b03811115612c8d575f5ffd5b803603821315612c9b575f5ffd5b606080850152612465608085018284612b3e565b805161278881612a82565b5f6001600160401b03821115612cd257612cd261207a565b5060051b60200190565b5f82601f830112612ceb575f5ffd5b8151612cf961215e82612cba565b8082825260208201915060208360071b860101925085831115612d1a575f5ffd5b602085015b83811015612d705760808188031215612d36575f5ffd5b612d3e6120b6565b815181526020808301518183015260408084015190830152606080840151908301529084529290920191608001612d1f565b5095945050505050565b5f82601f830112612d89575f5ffd5b8151612d9761215e82612cba565b8082825260208201915060208360051b860101925085831115612db8575f5ffd5b602085015b83811015612d705780516001600160401b03811115612dda575f5ffd5b612de9886020838a010161278d565b84525060209283019201612dbd565b5f60208284031215612e08575f5ffd5b81516001600160401b03811115612e1d575f5ffd5b82016101008185031215612e2f575f5ffd5b612e376120d8565b612e4082612aae565b815260208281015190820152612e5860408301612caf565b6040820152612e6960608301612caf565b60608201526080828101519082015260a08201516001600160401b03811115612e90575f5ffd5b612e9c86828501612cdc565b60a08301525060c08201516001600160401b03811115612eba575f5ffd5b612ec686828501612cdc565b60c08301525060e08201516001600160401b03811115612ee4575f5ffd5b612ef086828501612d7a565b60e08301525094935050505056fea2646970667358221220c23d01579f8ba67da227a08590c57d97a7d604988598bb3193b11decadf97fc764736f6c634300081c0033",
    "sourceMap": "558:16159:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15600:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3200:170;;;;;;:::i;:::-;;:::i;:::-;;;1206:14:40;;1199:22;1181:41;;1169:2;1154:18;3200:170:31;1041:187:40;14904:100:31;14985:12;;14904:100;;;1379:25:40;;;1367:2;1352:18;14904:100:31;1233:177:40;5858:371:31;;;;;;:::i;:::-;;:::i;16521:194::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;15442:97::-;15518:14;;15442:97;;15518:14;;;;4878:36:40;;4866:2;4851:18;15442:97:31;4736:184:40;3436:217:31;;;;;;:::i;:::-;;:::i;2077:1066::-;;;;;;:::i;:::-;;:::i;:::-;;4931:130;;;:::i;7558:106::-;;;;;;:::i;:::-;;:::i;9167:1926::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6556:230::-;;;;;;:::i;:::-;;:::i;15925:104::-;16008:14;;;;;;;;;;;;-1:-1:-1;;;16008:14:31;;;;15925:104;;16351:164;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;15282:92::-;15355:12;;;;;;;15282:92;;6288:209;;;;;;:::i;:::-;;:::i;16089:127::-;;;;;;:::i;:::-;-1:-1:-1;;;;;16186:23:31;16160:7;16186:23;;;;;;;;;;;;16089:127;3155:101:19;;;:::i;11753:223:31:-;;;;;;:::i;:::-;;:::i;548:50:32:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;548:50:32;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;548:50:32;;;;;;;;;-1:-1:-1;;;548:50:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;11099:648:31:-;;;;;;:::i;:::-;;:::i;4746:128::-;;;:::i;5124:217::-;;;;;;:::i;:::-;;:::i;2441:144:19:-;;;:::i;:::-;;;-1:-1:-1;;;;;13104:32:40;;;13086:51;;13074:2;13059:18;2441:144:19;12940:203:40;15760:101:31;;;:::i;7718:210::-;;;;;;:::i;:::-;;:::i;3719:225::-;;;;;;:::i;:::-;;:::i;7263:241::-;;;;;;:::i;:::-;;:::i;4370:320::-;;;;;;:::i;:::-;;:::i;4001:310::-;;;;;;:::i;:::-;;:::i;11982:397::-;;;;;;:::i;:::-;;:::i;15063:155::-;;;;;;:::i;:::-;-1:-1:-1;;;;;15182:19:31;;;15156:7;15182:19;;;:11;:19;;;;;;;;:29;;;;;;;;;;;;;15063:155;8124:1037;;;;;;:::i;:::-;;:::i;3405:215:19:-;;;;;;:::i;:::-;;:::i;15600:97:31:-;15648:13;15680:10;15673:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15600:97;:::o;3200:170::-;3287:4;3303:39;3312:10;3324:8;3334:7;3303:8;:39::i;:::-;-1:-1:-1;3359:4:31;3200:170;;;;;:::o;5858:371::-;1086:12;;5996:4;;1086:12;;;;;1085:13;1077:42;;;;-1:-1:-1;;;1077:42:31;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;16186:23:31;;16160:7;16186:23;;;;;;;;;;;6020:7:::1;:27;;6012:60;;;::::0;-1:-1:-1;;;6012:60:31;;14888:2:40;6012:60:31::1;::::0;::::1;14870:21:40::0;14927:2;14907:18;;;14900:30;-1:-1:-1;;;14946:18:40;;;14939:50;15006:18;;6012:60:31::1;14686:344:40::0;6012:60:31::1;-1:-1:-1::0;;;;;6110:18:31;::::1;;::::0;;;:11:::1;:18;::::0;;;;;;;6098:10:::1;6110:30:::0;;;;;;;;;6082:71:::1;::::0;6091:5;;6110:42:::1;::::0;6144:7;;6110:42:::1;:::i;:::-;6082:8;:71::i;:::-;6163:30;6173:5;6180:3;6185:7;6163:9;:30::i;:::-;-1:-1:-1::0;6210:4:31::1;1129:1;5858:371:::0;;;;;:::o;16521:194::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;16673:15:31;16662:46;;;;;;;;;;;;:::i;3436:217::-;3553:10;3528:4;3575:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;3575:33:31;;;;;;;;;;3528:4;;3544:81;;3565:8;;3575:49;;3612:11;;3575:49;:::i;2077:1066::-;8870:21:20;4302:15;;-1:-1:-1;;;4302:15:20;;;;4301:16;;-1:-1:-1;;;;;4348:14:20;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;-1:-1:-1;;;;;4790:16:20;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:20;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:20;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;4951:18:20;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;;;5013:22:20;-1:-1:-1;;;5013:22:20;;;4979:67;2528:1:31::1;2509:7;:5;:7::i;:::-;-1:-1:-1::0;;;;;2509:21:31::1;;2501:53;;;::::0;-1:-1:-1;;;2501:53:31;;17103:2:40;2501:53:31::1;::::0;::::1;17085:21:40::0;17142:2;17122:18;;;17115:30;-1:-1:-1;;;17161:18:40;;;17154:49;17220:18;;2501:53:31::1;16901:343:40::0;2501:53:31::1;2627:14;;;;;;17451:2:40::0;17433:21;;;17490:1;17470:18;;;17463:29;17524:2;17509:18;;17249:284;2627:14:31::1;;;;;;;;;;;;;2617:25;;;;;;2606:5;2595:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;2585:28;;;;;;:57;;:132;;;;;2702:14;;;;;;17451:2:40::0;17433:21;;;17490:1;17470:18;;;17463:29;17524:2;17509:18;;17249:284;2702:14:31::1;;;;;;;;;;;;;2692:25;;;;;;2679:7;2668:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;2658:30;;;;;;:59;;2585:132;2564:198;;;;-1:-1:-1::0;;;2564:198:31::1;;;;;;;:::i;:::-;2811:2;2798:9;:15;;;;2772:71;;;::::0;-1:-1:-1;;;2772:71:31;;18100:2:40;2772:71:31::1;::::0;::::1;18082:21:40::0;18139:2;18119:18;;;18112:30;18178:27;18158:18;;;18151:55;18223:18;;2772:71:31::1;17898:349:40::0;2772:71:31::1;2862:29;2877:13;2862:14;:29::i;:::-;2901:33;2906:10;2918:15;2901:4;:33::i;:::-;2953:10;:18;2966:5:::0;2953:10;:18:::1;:::i;:::-;-1:-1:-1::0;2981:12:31::1;:22;2996:7:::0;2981:12;:22:::1;:::i;:::-;-1:-1:-1::0;3013:14:31::1;:26:::0;;-1:-1:-1;;3013:26:31::1;;::::0;::::1;;::::0;;3055:81:::1;::::0;::::1;::::0;3091:12:::1;::::0;3055:81:::1;:::i;:::-;;;;;;;;3079:10;3055:81;;;;;;:::i;:::-;;::::0;;;;;::::1;::::0;;3105:14:::1;::::0;;3121;;::::1;::::0;;;;;-1:-1:-1;;;3121:14:31::1;::::0;::::1;::::0;3055:81;;;;::::1;::::0;::::1;::::0;3105:14:::1;::::0;;::::1;::::0;3055:81;::::1;:::i;:::-;;;;;;;;5070:14:20::0;5066:101;;;5100:23;;-1:-1:-1;;;;5100:23:20;;;5142:14;;-1:-1:-1;21634:50:40;;5142:14:20;;21622:2:40;21607:18;5142:14:20;;;;;;;5066:101;4092:1081;;;;;2077:1066:31;;;;:::o;4931:130::-;2334:13:19;:11;:13::i;:::-;1267:12:31::1;::::0;::::1;::::0;::::1;;;1259:45;;;::::0;-1:-1:-1;;;1259:45:31;;21897:2:40;1259:45:31::1;::::0;::::1;21879:21:40::0;21936:2;21916:18;;;21909:30;-1:-1:-1;;;21955:18:40;;;21948:50;22015:18;;1259:45:31::1;21695:344:40::0;1259:45:31::1;4999:12:::2;:20:::0;;-1:-1:-1;;4999:20:31::2;::::0;;5034::::2;::::0;5043:10:::2;13086:51:40::0;;5034:20:31::2;::::0;13074:2:40;13059:18;5034:20:31::2;;;;;;;;4931:130::o:0;7558:106::-;2334:13:19;:11;:13::i;:::-;7638:19:31::1;7644:3;7649:7;7638:5;:19::i;:::-;7558:106:::0;;:::o;9167:1926::-;9260:30;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9260:30:31;9329:20;9306:5;:19;;;:43;9302:97;;9372:16;;-1:-1:-1;;;9372:16:31;;;;;;;;;;;9302:97;9409:26;9438:36;9458:15;;;;:5;:15;:::i;:::-;9438:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9438:19:31;;-1:-1:-1;;;9438:36:31:i;:::-;9513:15;;;9526:1;9513:15;;;;;;;;;9409:65;;-1:-1:-1;9485:25:31;;9513:15;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9513:15:31;;;;;;;;;;;;;-1:-1:-1;;9569:15:31;;;9582:1;9569:15;;;;;;;;;9485:43;;-1:-1:-1;9538:28:31;;9569:15;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9569:15:31;;;;;;;;;;;;;-1:-1:-1;;9639:24:31;;;9661:1;9639:24;;;;;;;;;9538:46;;-1:-1:-1;9594:42:31;;9639:24;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;9639:24:31;;;;;;;;;;;;;;;9594:69;;9689:209;;;;;;;;9717:30;9728:9;:18;;;-1:-1:-1;;;;;16314:23:31;;16222:123;9717:30;9689:209;;;;9769:9;:18;;;9689:209;;;;9812:24;9823:9;:12;;;-1:-1:-1;;;;;16314:23:31;;16222:123;9812:24;9689:209;;;;9859:9;:28;;;-1:-1:-1;;;;;9689:209:31;;;;9674:9;9684:1;9674:12;;;;;;;;:::i;:::-;;;;;;:224;;;;9927:367;;;;;;;;9955:25;9974:4;-1:-1:-1;;;;;16314:23:31;;16222:123;9955:25;9927:367;;;10002:16;;;;9927:367;;;;;;-1:-1:-1;9927:367:31;;;;10270:13;9927:367;;;9909:12;9922:1;9909:15;;;;;;;;:::i;:::-;;;;;;:385;;;;10328:257;;;;;;;;10378:9;:28;;;-1:-1:-1;;;;;10328:257:31;;;;;10440:25;10459:4;-1:-1:-1;;;;;16314:23:31;;16222:123;10440:25;10328:257;;;;10559:15;;;;:5;:15;:::i;:::-;10328:257;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10328:257:31;;;;-1:-1:-1;;10305:20:31;;:17;;-1:-1:-1;10305:20:31;;;;:::i;:::-;;;;;;:280;;;;10615:471;;;;;;;;10663:10;-1:-1:-1;;;;;10615:471:31;;;;;10706:13;10615:471;;;;10751:16;10615:471;;;;;;10832:5;:18;;;;;;;;;;:::i;:::-;10615:471;;;;;;10877:18;:16;:18::i;:::-;10615:471;;;;10966:9;10615:471;;;;11006:12;10615:471;;;;11054:17;10615:471;;;10596:490;;;;;;9167:1926;;;:::o;6556:230::-;6672:9;6667:113;6687:25;;;6667:113;;;6733:36;6738:14;;6753:1;6738:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;6757:8;;6766:1;6757:11;;;;;;;:::i;:::-;;;;;;;6733:4;:36::i;:::-;6714:3;;6667:113;;;;6556:230;;;;:::o;16351:164::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16474:34:31;;-1:-1:-1;;16474:34:31;;;;;;;;;;:::i;6288:209::-;6397:9;6392:99;6412:18;;;6392:99;;;6451:29;6456:7;;6464:1;6456:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;6468:8;;6477:1;6468:11;;;;;;;:::i;:::-;;;;;;;6451:4;:29::i;:::-;6432:3;;6392:99;;3155:101:19;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;11753:223:31:-;2500:21:29;:19;:21::i;:::-;1672:6:31::1;::::0;-1:-1:-1;;;;;1672:6:31::1;1658:10;:20;1654:71;;1718:6;::::0;1687:38:::1;::::0;-1:-1:-1;;;1687:38:31;;1706:10:::1;1687:38;::::0;::::1;24409:51:40::0;-1:-1:-1;;;;;1718:6:31;;::::1;24476:18:40::0;;;24469:60;24382:18;;1687:38:31::1;24235:300:40::0;1654:71:31::1;11877:1:::2;11838:22:::0;;;:13:::2;:22;::::0;;;;:27;-1:-1:-1;;;;;11838:27:31::2;11830:69;;;::::0;-1:-1:-1;;;11830:69:31;;24742:2:40;11830:69:31::2;::::0;::::2;24724:21:40::0;24781:2;24761:18;;;24754:30;-1:-1:-1;;;24800:18:40;;;24793:45;24855:18;;11830:69:31::2;24540:339:40::0;11830:69:31::2;11916:22;::::0;;;:13:::2;:22;::::0;;;;;11909:29;;-1:-1:-1;;;;;;11909:29:31;;::::2;::::0;;;;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;;-1:-1:-1;;;;;;11909:29:31;;;;;;;;11953:16;11930:7;;11953:16:::2;::::0;::::2;2542:20:29::0;1857:1;3068:7;:21;2888:208;2542:20;11753:223:31;:::o;11099:648::-;2500:21:29;:19;:21::i;:::-;1672:6:31::1;::::0;-1:-1:-1;;;;;1672:6:31::1;1658:10;:20;1654:71;;1718:6;::::0;1687:38:::1;::::0;-1:-1:-1;;;1687:38:31;;1706:10:::1;1687:38;::::0;::::1;24409:51:40::0;-1:-1:-1;;;;;1718:6:31;;::::1;24476:18:40::0;;;24469:60;24382:18;;1687:38:31::1;24235:300:40::0;1654:71:31::1;11300:1:::2;11261:22:::0;;;:13:::2;:22;::::0;;;;:27;-1:-1:-1;;;;;11261:27:31::2;11257:103;;11325:24;::::0;-1:-1:-1;;;11325:24:31;;::::2;::::0;::::2;1379:25:40::0;;;1352:18;;11325:24:31::2;1233:177:40::0;11257:103:31::2;11470:26;11499:31;11519:10;;11499:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;::::0;;;;-1:-1:-1;11499:19:31::2;::::0;-1:-1:-1;;;11499:31:31:i:2;:::-;11470:60;;11540:37;11546:9;:12;;;11560:9;:16;;;11540:5;:37::i;:::-;11593:13;::::0;11598:7;;11593:13:::2;::::0;;;::::2;11247:500;2542:20:29::0;1857:1;3068:7;:21;2888:208;4746:128:31;2334:13:19;:11;:13::i;:::-;1086:12:31::1;::::0;::::1;::::0;::::1;;;1085:13;1077:42;;;;-1:-1:-1::0;;;1077:42:31::1;;;;;;;:::i;:::-;4815:12:::2;:19:::0;;-1:-1:-1;;4815:19:31::2;;;::::0;;4849:18:::2;::::0;4856:10:::2;13086:51:40::0;;4849:18:31::2;::::0;13074:2:40;13059:18;4849::31::2;12940:203:40::0;5124:217:31;5237:9;5232:103;5252:18;;;5232:103;;;5291:33;5300:7;;5308:1;5300:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;5312:8;;5321:1;5312:11;;;;;;;:::i;:::-;;;;;;;5291:8;:33::i;:::-;-1:-1:-1;5272:3:31;;5232:103;;2441:144:19;1313:22;2570:8;-1:-1:-1;;;;;2570:8:19;;2441:144::o;15760:101:31:-;15810:13;15842:12;15835:19;;;;;:::i;7718:210::-;2334:13:19;:11;:13::i;:::-;7842:7:31::1;7815:23;7825:12;-1:-1:-1::0;;;;;16186:23:31;16160:7;16186:23;;;;;;;;;;;;16089:127;7815:23:::1;:34;;7807:76;;;::::0;-1:-1:-1;;;7807:76:31;;25268:2:40;7807:76:31::1;::::0;::::1;25250:21:40::0;25307:2;25287:18;;;25280:30;25346:31;25326:18;;;25319:59;25395:18;;7807:76:31::1;25066:353:40::0;7807:76:31::1;7893:28;7899:12;7913:7;7893:5;:28::i;3719:225::-:0;3841:10;3816:4;3863:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;3863:33:31;;;;;;;;;;3816:4;;3832:84;;3853:8;;3863:52;;3899:16;;3863:52;:::i;7263:241::-;1086:12;;7350:4;;1086:12;;;;;1085:13;1077:42;;;;-1:-1:-1;;;1077:42:31;;;;;;;:::i;:::-;7395:10:::1;16160:7:::0;16186:23;;;;;;;;;;;7374:7:::1;:32;;7366:65;;;::::0;-1:-1:-1;;;7366:65:31;;14888:2:40;7366:65:31::1;::::0;::::1;14870:21:40::0;14927:2;14907:18;;;14900:30;-1:-1:-1;;;14946:18:40;;;14939:50;15006:18;;7366:65:31::1;14686:344:40::0;7366:65:31::1;7441:35;7451:10;7463:3;7468:7;7441:9;:35::i;4370:320::-:0;2334:13:19;:11;:13::i;:::-;4504:14:31::1;;;;;;17451:2:40::0;17433:21;;;17490:1;17470:18;;;17463:29;17524:2;17509:18;;17249:284;4504:14:31::1;;;;;;;;;;;;;4494:25;;;;;;4481:7;;4470:19;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4460:30;;;;;;:59:::0;4452:103:::1;;;;-1:-1:-1::0;;;4452:103:31::1;;;;;;;:::i;:::-;4565:12;:22;4580:7:::0;;4565:12;:22:::1;:::i;:::-;;4638:12;4602:81;;;;;;:::i;:::-;;;;;;;;4626:10;4602:81;;;;;;:::i;:::-;;::::0;;;;;::::1;::::0;;4652:14:::1;::::0;;4668;;::::1;::::0;;;;;-1:-1:-1;;;4668:14:31::1;::::0;::::1;::::0;4602:81;;;;::::1;::::0;::::1;::::0;4652:14:::1;::::0;;::::1;::::0;4602:81;::::1;:::i;:::-;;;;;;;;4370:320:::0;;:::o;4001:310::-;2334:13:19;:11;:13::i;:::-;4129:14:31::1;;;;;;17451:2:40::0;17433:21;;;17490:1;17470:18;;;17463:29;17524:2;17509:18;;17249:284;4129:14:31::1;;;;;;;;;;;;;4119:25;;;;;;4108:5;;4097:17;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4087:28;;;;;;:57:::0;4079:101:::1;;;;-1:-1:-1::0;;;4079:101:31::1;;;;;;;:::i;:::-;4190:10;:18;4203:5:::0;;4190:10;:18:::1;:::i;11982:397::-:0;2500:21:29;:19;:21::i;:::-;1672:6:31::1;::::0;-1:-1:-1;;;;;1672:6:31::1;1658:10;:20;1654:71;;1718:6;::::0;1687:38:::1;::::0;-1:-1:-1;;;1687:38:31;;1706:10:::1;1687:38;::::0;::::1;24409:51:40::0;-1:-1:-1;;;;;1718:6:31;;::::1;24476:18:40::0;;;24469:60;24382:18;;1687:38:31::1;24235:300:40::0;1654:71:31::1;12079:22:::2;::::0;;;:13:::2;:22;::::0;;;;:39;;;:44;;12058:106:::2;;;::::0;-1:-1:-1;;;12058:106:31;;24742:2:40;12058:106:31::2;::::0;::::2;24724:21:40::0;24781:2;24761:18;;;24754:30;-1:-1:-1;;;24800:18:40;;;24793:45;24855:18;;12058:106:31::2;24540:339:40::0;12058:106:31::2;12174:26;12203:22:::0;;;:13:::2;:22;::::0;;;;;;;;12174:51;;;;::::2;::::0;;;;-1:-1:-1;;;;;12174:51:31;;::::2;::::0;;;;::::2;::::0;::::2;::::0;;;;::::2;::::0;;::::2;::::0;;;;;;;;::::2;::::0;;;;;;;-1:-1:-1;;;;;12174:51:31;::::2;::::0;;;;;;;-1:-1:-1;;;12174:51:31;;::::2;::::0;;::::2;::::0;;;;;;;;;;;;;;;::::2;::::0;12260:14;;12276:26;;12174:51;;12235:68:::2;::::0;12253:4:::2;::::0;12260:14;12235:9:::2;:68::i;:::-;12320:22;::::0;;;:13:::2;:22;::::0;;;;;12313:29;;-1:-1:-1;;;;;;12313:29:31;;::::2;::::0;;;;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;;-1:-1:-1;;;;;;12313:29:31;;;;;;;;12357:15;12334:7;;12357:15:::2;::::0;::::2;12048:331;2542:20:29::0;1857:1;3068:7;:21;2888:208;8124:1037:31;2500:21:29;:19;:21::i;:::-;8209:26:31::1;8238:36;8258:15;;::::0;::::1;:5:::0;:15:::1;:::i;8238:36::-;8331:19;::::0;-1:-1:-1;;;8331:19:31;;8209:65;;-1:-1:-1;8284:44:31::1;::::0;8331:4:::1;::::0;:12:::1;::::0;:19:::1;::::0;8344:5;;8331:19:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;8331:19:31::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;8396:21;::::0;::::1;::::0;8435:1:::1;8382:36:::0;;;:13:::1;:36;::::0;;;;:41;8284:66;;-1:-1:-1;;;;;;8382:41:31::1;:55:::0;8361:123:::1;;;::::0;-1:-1:-1;;;8361:123:31;;32362:2:40;8361:123:31::1;::::0;::::1;32344:21:40::0;32401:2;32381:18;;;32374:30;-1:-1:-1;;;32420:18:40;;;32413:51;32481:18;;8361:123:31::1;32160:345:40::0;8361:123:31::1;8523:85;::::0;;;;::::1;::::0;;8553:10:::1;8523:85:::0;;;::::1;::::0;;::::1;::::0;;;8633:21:::1;::::0;;::::1;::::0;8494:26:::1;8619:36:::0;;;:13:::1;:36:::0;;;;;:48;;;;-1:-1:-1;;;;;8619:48:31;;::::1;-1:-1:-1::0;;;;;;8619:48:31;;::::1;;::::0;;;;;;;;::::1;::::0;;;;::::1;::::0;;;::::1;;::::0;;;;;::::1;::::0;;;;;;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;::::1;-1:-1:-1::0;;;8619:48:31::1;-1:-1:-1::0;;;;;;8619:48:31;;;-1:-1:-1;;;;;8619:48:31;;::::1;::::0;;;;;;;::::1;::::0;;;::::1;::::0;;;;;;;;;8931:16;;::::1;::::0;8523:85;;8894:54:::1;::::0;8924:4:::1;::::0;8894:9:::1;:54::i;:::-;9072:13;:30;;;9103:1;9072:33;;;;;;;;:::i;:::-;;;;;;;:44;;;9062:55;;;;;;9029:125;9131:13;9029:125;;;;;;:::i;:::-;;;;;;;;8199:962;;;2542:20:29::0;1857:1;3068:7;:21;2888:208;3405:215:19;2334:13;:11;:13::i;:::-;-1:-1:-1;;;;;3489:22:19;::::1;3485:91;;3534:31;::::0;-1:-1:-1;;;3534:31:19;;3562:1:::1;3534:31;::::0;::::1;13086:51:40::0;13059:18;;3534:31:19::1;12940:203:40::0;3485:91:19::1;3585:28;3604:8;3585:18;:28::i;14252:381:31:-:0;-1:-1:-1;;;;;14386:20:31;;14378:69;;;;-1:-1:-1;;;14378:69:31;;32712:2:40;14378:69:31;;;32694:21:40;32751:2;32731:18;;;32724:30;32790:34;32770:18;;;32763:62;-1:-1:-1;;;32841:18:40;;;32834:34;32885:19;;14378:69:31;32510:400:40;14378:69:31;-1:-1:-1;;;;;14465:22:31;;14457:69;;;;-1:-1:-1;;;14457:69:31;;33117:2:40;14457:69:31;;;33099:21:40;33156:2;33136:18;;;33129:30;33195:34;33175:18;;;33168:62;-1:-1:-1;;;33246:18:40;;;33239:32;33288:19;;14457:69:31;32915:398:40;14457:69:31;-1:-1:-1;;;;;14537:19:31;;;;;;;:11;:19;;;;;;;;:29;;;;;;;;;;;;;:39;;;14591:35;;1379:25:40;;;14591:35:31;;1352:18:40;14591:35:31;;;;;;;;14252:381;;;:::o;12863:475::-;-1:-1:-1;;;;;12992:19:31;;12984:69;;;;-1:-1:-1;;;12984:69:31;;33520:2:40;12984:69:31;;;33502:21:40;33559:2;33539:18;;;33532:30;33598:34;33578:18;;;33571:62;-1:-1:-1;;;33649:18:40;;;33642:35;33694:19;;12984:69:31;33318:401:40;12984:69:31;-1:-1:-1;;;;;13071:17:31;;13063:65;;;;-1:-1:-1;;;13063:65:31;;33926:2:40;13063:65:31;;;33908:21:40;33965:2;33945:18;;;33938:30;34004:34;33984:18;;;33977:62;-1:-1:-1;;;34055:18:40;;;34048:33;34098:19;;13063:65:31;33724:399:40;13063:65:31;-1:-1:-1;;;;;13210:16:31;;:9;:16;;;;;;;;;;;:26;;13229:7;;13210:26;:::i;:::-;-1:-1:-1;;;;;13191:16:31;;;:9;:16;;;;;;;;;;;:45;;;;13263:14;;;;;;;:24;;13280:7;;13263:24;:::i;:::-;-1:-1:-1;;;;;13246:14:31;;;:9;:14;;;;;;;;;;;;:41;;;;13302:29;1379:25:40;;;13246:14:31;;13302:29;;;;;;1352:18:40;13302:29:31;1233:177:40;1847:127:19;6931:20:20;:18;:20::i;:::-;1929:38:19::1;1954:12;1929:24;:38::i;2658:162::-:0;966:10:21;2717:7:19;:5;:7::i;:::-;-1:-1:-1;;;;;2717:23:19;;2713:101;;2763:40;;-1:-1:-1;;;2763:40:19;;966:10:21;2763:40:19;;;13086:51:40;13059:18;;2763:40:19;12940:203:40;13392:399:31;-1:-1:-1;;;;;13481:26:31;;13473:70;;;;-1:-1:-1;;;13473:70:31;;34330:2:40;13473:70:31;;;34312:21:40;34369:2;34349:18;;;34342:30;34408:33;34388:18;;;34381:61;34459:18;;13473:70:31;34128:355:40;13473:70:31;13650:7;13635:12;;:22;;;;:::i;:::-;13620:12;:37;-1:-1:-1;;;;;13693:23:31;;:9;:23;;;;;;;;;;;:33;;13719:7;;13693:33;:::i;:::-;-1:-1:-1;;;;;13667:23:31;;:9;:23;;;;;;;;;;;:59;;;;13741:43;;1379:25:40;;;13667:23:31;;:9;;13741:43;;1352:18:40;13741:43:31;1233:177:40;12385:419:31;12436:7;12539:15;12603:16;12675:10;12729:12;12501:282;;;;;;;;;;34701:19:40;;;34745:2;34736:12;;34729:28;;;;34795:2;34791:15;-1:-1:-1;;34787:53:40;34782:2;34773:12;;34766:75;34866:2;34857:12;;34850:28;34903:3;34894:13;;34488:425;12501:282:31;;;;;;;;;;;;;12474:323;;;;;;12455:342;;12385:419;:::o;3774:248:19:-;1313:22;3923:8;;-1:-1:-1;;;;;;3941:19:19;;-1:-1:-1;;;;;3941:19:19;;;;;;;;3975:40;;3923:8;;;;;3975:40;;3847:24;;3975:40;3837:185;;3774:248;:::o;2575:307:29:-;1899:1;2702:7;;:18;2698:86;;2743:30;;-1:-1:-1;;;2743:30:29;;;;;;;;;;;2698:86;1899:1;2858:7;:17;2575:307::o;13845:401:31:-;-1:-1:-1;;;;;13934:26:31;;13926:72;;;;-1:-1:-1;;;13926:72:31;;35120:2:40;13926:72:31;;;35102:21:40;35159:2;35139:18;;;35132:30;35198:34;35178:18;;;35171:62;-1:-1:-1;;;35249:18:40;;;35242:31;35290:19;;13926:72:31;34918:397:40;13926:72:31;-1:-1:-1;;;;;14101:23:31;;:9;:23;;;;;;;;;;;:33;;14127:7;;14101:33;:::i;:::-;-1:-1:-1;;;;;14075:23:31;;:9;:23;;;;;;;;;;:59;14159:12;;:22;;14174:7;;14159:22;:::i;:::-;14144:12;:37;14196:43;;1379:25:40;;;14227:1:31;;-1:-1:-1;;;;;14196:43:31;;;;;1367:2:40;1352:18;14196:43:31;1233:177:40;14752:94:31;;;;:::o;7084:141:20:-;8870:21;8560:40;-1:-1:-1;;;8560:40:20;;;;7146:73;;7191:17;;-1:-1:-1;;;7191:17:20;;;;;;;;;;;1980:235:19;6931:20:20;:18;:20::i;14:289:40:-;56:3;94:5;88:12;121:6;116:3;109:19;177:6;170:4;163:5;159:16;152:4;147:3;143:14;137:47;229:1;222:4;213:6;208:3;204:16;200:27;193:38;292:4;285:2;281:7;276:2;268:6;264:15;260:29;255:3;251:39;247:50;240:57;;;14:289;;;;:::o;308:220::-;457:2;446:9;439:21;420:4;477:45;518:2;507:9;503:18;495:6;477:45;:::i;533:131::-;-1:-1:-1;;;;;608:31:40;;598:42;;588:70;;654:1;651;644:12;669:367;737:6;745;798:2;786:9;777:7;773:23;769:32;766:52;;;814:1;811;804:12;766:52;853:9;840:23;872:31;897:5;872:31;:::i;:::-;922:5;1000:2;985:18;;;;972:32;;-1:-1:-1;;;669:367:40:o;1415:508::-;1492:6;1500;1508;1561:2;1549:9;1540:7;1536:23;1532:32;1529:52;;;1577:1;1574;1567:12;1529:52;1616:9;1603:23;1635:31;1660:5;1635:31;:::i;:::-;1685:5;-1:-1:-1;1742:2:40;1727:18;;1714:32;1755:33;1714:32;1755:33;:::i;:::-;1415:508;;1807:7;;-1:-1:-1;;;1887:2:40;1872:18;;;;1859:32;;1415:508::o;1928:127::-;1989:10;1984:3;1980:20;1977:1;1970:31;2020:4;2017:1;2010:15;2044:4;2041:1;2034:15;2060:253;2132:2;2126:9;2174:4;2162:17;;-1:-1:-1;;;;;2194:34:40;;2230:22;;;2191:62;2188:88;;;2256:18;;:::i;:::-;2292:2;2285:22;2060:253;:::o;2318:::-;2390:2;2384:9;2432:4;2420:17;;-1:-1:-1;;;;;2452:34:40;;2488:22;;;2449:62;2446:88;;;2514:18;;:::i;2576:255::-;2648:2;2642:9;2690:6;2678:19;;-1:-1:-1;;;;;2712:34:40;;2748:22;;;2709:62;2706:88;;;2774:18;;:::i;2836:275::-;2907:2;2901:9;2972:2;2953:13;;-1:-1:-1;;2949:27:40;2937:40;;-1:-1:-1;;;;;2992:34:40;;3028:22;;;2989:62;2986:88;;;3054:18;;:::i;:::-;3090:2;3083:22;2836:275;;-1:-1:-1;2836:275:40:o;3116:186::-;3164:4;-1:-1:-1;;;;;3189:6:40;3186:30;3183:56;;;3219:18;;:::i;:::-;-1:-1:-1;3285:2:40;3264:15;-1:-1:-1;;3260:29:40;3291:4;3256:40;;3116:186::o;3307:336::-;3371:5;3400:52;3416:35;3444:6;3416:35;:::i;:::-;3400:52;:::i;:::-;3391:61;;3475:6;3468:5;3461:21;3515:3;3506:6;3501:3;3497:16;3494:25;3491:45;;;3532:1;3529;3522:12;3491:45;3581:6;3576:3;3569:4;3562:5;3558:16;3545:43;3635:1;3628:4;3619:6;3612:5;3608:18;3604:29;3597:40;3307:336;;;;;:::o;3648:449::-;3716:6;3769:2;3757:9;3748:7;3744:23;3740:32;3737:52;;;3785:1;3782;3775:12;3737:52;3825:9;3812:23;-1:-1:-1;;;;;3850:6:40;3847:30;3844:50;;;3890:1;3887;3880:12;3844:50;3913:22;;3966:4;3958:13;;3954:27;-1:-1:-1;3944:55:40;;3995:1;3992;3985:12;3944:55;4018:73;4083:7;4078:2;4065:16;4060:2;4056;4052:11;4018:73;:::i;:::-;4008:83;3648:449;-1:-1:-1;;;;3648:449:40:o;4102:340::-;-1:-1:-1;;;;;4200:5:40;4194:12;4190:37;4185:3;4178:50;4277:4;4270:5;4266:16;4260:23;4253:4;4248:3;4244:14;4237:47;4160:3;4330:4;4323:5;4319:16;4313:23;4368:4;4361;4356:3;4352:14;4345:28;4389:47;4430:4;4425:3;4421:14;4407:12;4389:47;:::i;4447:284::-;4644:2;4633:9;4626:21;4607:4;4664:61;4721:2;4710:9;4706:18;4698:6;4664:61;:::i;4925:221::-;4968:5;5021:3;5014:4;5006:6;5002:17;4998:27;4988:55;;5039:1;5036;5029:12;4988:55;5061:79;5136:3;5127:6;5114:20;5107:4;5099:6;5095:17;5061:79;:::i;5151:839::-;5255:6;5263;5271;5279;5332:3;5320:9;5311:7;5307:23;5303:33;5300:53;;;5349:1;5346;5339:12;5300:53;5388:9;5375:23;5407:31;5432:5;5407:31;:::i;:::-;5457:5;-1:-1:-1;5513:2:40;5498:18;;5485:32;-1:-1:-1;;;;;5529:30:40;;5526:50;;;5572:1;5569;5562:12;5526:50;5595;5637:7;5628:6;5617:9;5613:22;5595:50;:::i;:::-;5585:60;;;5698:2;5687:9;5683:18;5670:32;-1:-1:-1;;;;;5717:8:40;5714:32;5711:52;;;5759:1;5756;5749:12;5711:52;5782;5826:7;5815:8;5804:9;5800:24;5782:52;:::i;:::-;5772:62;;;5886:2;5875:9;5871:18;5858:32;5934:4;5925:7;5921:18;5912:7;5909:31;5899:59;;5954:1;5951;5944:12;5899:59;5151:839;;;;-1:-1:-1;5151:839:40;;-1:-1:-1;;5151:839:40:o;5995:402::-;6097:6;6150:2;6138:9;6129:7;6125:23;6121:32;6118:52;;;6166:1;6163;6156:12;6118:52;6206:9;6193:23;-1:-1:-1;;;;;6231:6:40;6228:30;6225:50;;;6271:1;6268;6261:12;6225:50;6294:22;;6350:2;6332:16;;;6328:25;6325:45;;;6366:1;6363;6356:12;6610:629;6669:3;6707:5;6701:12;6734:6;6729:3;6722:19;6766:4;6761:3;6757:14;6750:21;;6805:4;6798:5;6794:16;6828:1;6838:376;6852:6;6849:1;6846:13;6838:376;;;6917:6;6911:13;6955:2;6949:9;6944:3;6937:22;7009:4;7005:2;7001:13;6995:20;6988:4;6983:3;6979:14;6972:44;7066:4;7062:2;7058:13;7052:20;7045:4;7040:3;7036:14;7029:44;7123:4;7119:2;7115:13;7109:20;7102:4;7097:3;7093:14;7086:44;;7159:4;7154:3;7150:14;7143:21;;7199:4;7191:6;7187:17;7177:27;;6874:1;6871;6867:9;6862:14;;6838:376;;;-1:-1:-1;7230:3:40;;6610:629;-1:-1:-1;;;;6610:629:40:o;7244:611::-;7312:3;7343;7375:5;7369:12;7402:6;7397:3;7390:19;7434:4;7429:3;7425:14;7418:21;;7492:4;7482:6;7479:1;7475:14;7468:5;7464:26;7460:37;7531:4;7524:5;7520:16;7554:1;7564:265;7578:6;7575:1;7572:13;7564:265;;;7665:2;7661:7;7653:5;7647:4;7643:16;7639:30;7634:3;7627:43;7691:54;7740:4;7731:6;7725:13;7691:54;:::i;:::-;7780:4;7805:14;;;;7683:62;;-1:-1:-1;7768:17:40;;;;;7600:1;7593:9;7564:265;;;-1:-1:-1;7845:4:40;;7244:611;-1:-1:-1;;;;;;7244:611:40:o;7860:1247::-;8073:2;8062:9;8055:21;8085:53;8134:2;8123:9;8119:18;8110:6;8104:13;-1:-1:-1;;;;;6468:31:40;6456:44;;6402:104;8085:53;8192:2;8184:6;8180:15;8174:22;8169:2;8158:9;8154:18;8147:50;8036:4;8244:2;8236:6;8232:15;8226:22;8257:51;8304:2;8293:9;8289:18;8275:12;6587:10;6576:22;6564:35;;6511:94;8257:51;-1:-1:-1;8357:2:40;8345:15;;8339:22;6587:10;6576:22;;8419:3;8404:19;;6564:35;8370:54;8479:3;8471:6;8467:16;8461:23;8455:3;8444:9;8440:19;8433:52;8534:3;8526:6;8522:16;8516:23;8576:6;8570:3;8559:9;8555:19;8548:35;8606:71;8672:3;8661:9;8657:19;8641:14;8606:71;:::i;:::-;8592:85;;8726:3;8718:6;8714:16;8708:23;8800:2;8796:7;8784:9;8776:6;8772:22;8768:36;8762:3;8751:9;8747:19;8740:65;8828:58;8879:6;8863:14;8828:58;:::i;:::-;8814:72;;;8935:3;8927:6;8923:16;8917:23;9012:2;9008:7;8996:9;8988:6;8984:22;8980:36;8971:6;8960:9;8956:22;8949:68;9034:67;9094:6;9078:14;9034:67;:::i;:::-;9026:75;7860:1247;-1:-1:-1;;;;;7860:1247:40:o;9112:367::-;9175:8;9185:6;9239:3;9232:4;9224:6;9220:17;9216:27;9206:55;;9257:1;9254;9247:12;9206:55;-1:-1:-1;9280:20:40;;-1:-1:-1;;;;;9312:30:40;;9309:50;;;9355:1;9352;9345:12;9309:50;9392:4;9384:6;9380:17;9368:29;;9452:3;9445:4;9435:6;9432:1;9428:14;9420:6;9416:27;9412:38;9409:47;9406:67;;;9469:1;9466;9459:12;9406:67;9112:367;;;;;:::o;9484:768::-;9606:6;9614;9622;9630;9683:2;9671:9;9662:7;9658:23;9654:32;9651:52;;;9699:1;9696;9689:12;9651:52;9739:9;9726:23;-1:-1:-1;;;;;9764:6:40;9761:30;9758:50;;;9804:1;9801;9794:12;9758:50;9843:70;9905:7;9896:6;9885:9;9881:22;9843:70;:::i;:::-;9932:8;;-1:-1:-1;9817:96:40;-1:-1:-1;;10020:2:40;10005:18;;9992:32;-1:-1:-1;;;;;10036:32:40;;10033:52;;;10081:1;10078;10071:12;10033:52;10120:72;10184:7;10173:8;10162:9;10158:24;10120:72;:::i;:::-;9484:768;;;;-1:-1:-1;10211:8:40;-1:-1:-1;;;;9484:768:40:o;10257:395::-;10336:12;;-1:-1:-1;;;;;10332:38:40;;;10320:51;;10420:4;10409:16;;;10403:23;10387:14;;;10380:47;10480:4;10469:16;;;10463:23;-1:-1:-1;;;;;10459:48:40;10443:14;;;10436:72;10561:4;10550:16;;;10544:23;10540:49;;;10524:14;;;10517:73;10639:4;10628:16;;;10622:23;10606:14;;10599:47;10257:395::o;10657:255::-;10847:3;10832:19;;10860:46;10836:9;10888:6;10860:46;:::i;10917:247::-;10976:6;11029:2;11017:9;11008:7;11004:23;11000:32;10997:52;;;11045:1;11042;11035:12;10997:52;11084:9;11071:23;11103:31;11128:5;11103:31;:::i;11169:226::-;11228:6;11281:2;11269:9;11260:7;11256:23;11252:32;11249:52;;;11297:1;11294;11287:12;11249:52;-1:-1:-1;11342:23:40;;11169:226;-1:-1:-1;11169:226:40:o;11400:352::-;-1:-1:-1;;;;;11649:32:40;;11631:51;;11618:3;11603:19;;11691:55;11742:2;11727:18;;11719:6;11691:55;:::i;11757:347::-;11808:8;11818:6;11872:3;11865:4;11857:6;11853:17;11849:27;11839:55;;11890:1;11887;11880:12;11839:55;-1:-1:-1;11913:20:40;;-1:-1:-1;;;;;11945:30:40;;11942:50;;;11988:1;11985;11978:12;11942:50;12025:4;12017:6;12013:17;12001:29;;12077:3;12070:4;12061:6;12053;12049:19;12045:30;12042:39;12039:59;;;12094:1;12091;12084:12;12109:826;12208:6;12216;12224;12232;12240;12293:2;12281:9;12272:7;12268:23;12264:32;12261:52;;;12309:1;12306;12299:12;12261:52;12354:23;;;-1:-1:-1;12452:2:40;12437:18;;12424:32;-1:-1:-1;;;;;12468:30:40;;12465:50;;;12511:1;12508;12501:12;12465:50;12550:58;12600:7;12591:6;12580:9;12576:22;12550:58;:::i;:::-;12627:8;;-1:-1:-1;12524:84:40;-1:-1:-1;;12715:2:40;12700:18;;12687:32;-1:-1:-1;;;;;12731:32:40;;12728:52;;;12776:1;12773;12766:12;12728:52;12815:60;12867:7;12856:8;12845:9;12841:24;12815:60;:::i;:::-;12109:826;;;;-1:-1:-1;12109:826:40;;-1:-1:-1;12894:8:40;;12789:86;12109:826;-1:-1:-1;;;12109:826:40:o;13148:410::-;13219:6;13227;13280:2;13268:9;13259:7;13255:23;13251:32;13248:52;;;13296:1;13293;13286:12;13248:52;13336:9;13323:23;-1:-1:-1;;;;;13361:6:40;13358:30;13355:50;;;13401:1;13398;13391:12;13355:50;13440:58;13490:7;13481:6;13470:9;13466:22;13440:58;:::i;:::-;13517:8;;13414:84;;-1:-1:-1;13148:410:40;-1:-1:-1;;;;13148:410:40:o;13563:388::-;13631:6;13639;13692:2;13680:9;13671:7;13667:23;13663:32;13660:52;;;13708:1;13705;13698:12;13660:52;13747:9;13734:23;13766:31;13791:5;13766:31;:::i;:::-;13816:5;-1:-1:-1;13873:2:40;13858:18;;13845:32;13886:33;13845:32;13886:33;:::i;:::-;13938:7;13928:17;;;13563:388;;;;;:::o;13956:380::-;14035:1;14031:12;;;;14078;;;14099:61;;14153:4;14145:6;14141:17;14131:27;;14099:61;14206:2;14198:6;14195:14;14175:18;14172:38;14169:161;;14252:10;14247:3;14243:20;14240:1;14233:31;14287:4;14284:1;14277:15;14315:4;14312:1;14305:15;14169:161;;13956:380;;;:::o;14341:340::-;14543:2;14525:21;;;14582:2;14562:18;;;14555:30;-1:-1:-1;;;14616:2:40;14601:18;;14594:46;14672:2;14657:18;;14341:340::o;15035:127::-;15096:10;15091:3;15087:20;15084:1;15077:31;15127:4;15124:1;15117:15;15151:4;15148:1;15141:15;15167:128;15234:9;;;15255:11;;;15252:37;;;15269:18;;:::i;15300:175::-;15378:13;;-1:-1:-1;;;;;15420:30:40;;15410:41;;15400:69;;15465:1;15462;15455:12;15400:69;15300:175;;;:::o;15480:904::-;15553:5;15601:4;15589:9;15584:3;15580:19;15576:30;15573:50;;;15619:1;15616;15609:12;15573:50;15641:22;;:::i;:::-;15632:31;;15686:39;15715:9;15686:39;:::i;:::-;15672:54;;15792:2;15777:18;;;15771:25;15812:14;;;15805:31;15880:2;15865:18;;15859:25;-1:-1:-1;;;;;15896:30:40;;15893:50;;;15939:1;15936;15929:12;15893:50;15962:22;;16015:4;16007:13;;16003:23;-1:-1:-1;15993:51:40;;16040:1;16037;16030:12;15993:51;16073:2;16067:9;16098:52;16114:35;16142:6;16114:35;:::i;16098:52::-;16173:6;16166:5;16159:21;16221:3;16216:2;16207:6;16203:2;16199:15;16195:24;16192:33;16189:53;;;16238:1;16235;16228:12;16189:53;16286:6;16281:2;16277;16273:11;16268:2;16261:5;16257:14;16251:42;16338:1;16333:2;16324:6;16317:5;16313:18;16309:27;16302:38;16372:5;16367:2;16360:5;16356:14;16349:29;;;;15480:904;;;;:::o;16389:377::-;16493:6;16546:2;16534:9;16525:7;16521:23;16517:32;16514:52;;;16562:1;16559;16552:12;16514:52;16595:9;16589:16;-1:-1:-1;;;;;16620:6:40;16617:30;16614:50;;;16660:1;16657;16650:12;16614:50;16683:77;16752:7;16743:6;16732:9;16728:22;16683:77;:::i;16771:125::-;16836:9;;;16857:10;;;16854:36;;;16870:18;;:::i;17538:355::-;17740:2;17722:21;;;17779:2;17759:18;;;17752:30;17818:33;17813:2;17798:18;;17791:61;17884:2;17869:18;;17538:355::o;18378:518::-;18480:2;18475:3;18472:11;18469:421;;;18516:5;18513:1;18506:16;18560:4;18557:1;18547:18;18630:2;18618:10;18614:19;18611:1;18607:27;18601:4;18597:38;18666:4;18654:10;18651:20;18648:47;;;-1:-1:-1;18689:4:40;18648:47;18744:2;18739:3;18735:12;18732:1;18728:20;18722:4;18718:31;18708:41;;18799:81;18817:2;18810:5;18807:13;18799:81;;;18876:1;18862:16;;18843:1;18832:13;18799:81;;19072:1299;19198:3;19192:10;-1:-1:-1;;;;;19217:6:40;19214:30;19211:56;;;19247:18;;:::i;:::-;19276:97;19366:6;19326:38;19358:4;19352:11;19326:38;:::i;:::-;19320:4;19276:97;:::i;:::-;19422:4;19453:2;19442:14;;19470:1;19465:649;;;;20158:1;20175:6;20172:89;;;-1:-1:-1;20227:19:40;;;20221:26;20172:89;-1:-1:-1;;19029:1:40;19025:11;;;19021:24;19017:29;19007:40;19053:1;19049:11;;;19004:57;20274:81;;19435:930;;19465:649;18325:1;18318:14;;;18362:4;18349:18;;-1:-1:-1;;19501:20:40;;;19619:222;19633:7;19630:1;19627:14;19619:222;;;19715:19;;;19709:26;19694:42;;19822:4;19807:20;;;;19775:1;19763:14;;;;19649:12;19619:222;;;19623:3;19869:6;19860:7;19857:19;19854:201;;;19930:19;;;19924:26;-1:-1:-1;;20013:1:40;20009:14;;;20025:3;20005:24;20001:37;19997:42;19982:58;19967:74;;19854:201;-1:-1:-1;;;;20101:1:40;20085:14;;;20081:22;20068:36;;-1:-1:-1;19072:1299:40:o;20376:797::-;20504:3;20533:1;20566:6;20560:13;20596:36;20622:9;20596:36;:::i;:::-;20663:1;20648:17;;20674:133;;;;20821:1;20816:332;;;;20641:507;;20674:133;-1:-1:-1;;20707:24:40;;20695:37;;20780:14;;20773:22;20761:35;;20752:45;;;-1:-1:-1;20674:133:40;;20816:332;20847:6;20844:1;20837:17;20895:4;20892:1;20882:18;20922:1;20936:166;20950:6;20947:1;20944:13;20936:166;;;21030:14;;21017:11;;;21010:35;21086:1;21073:15;;;;20972:4;20965:12;20936:166;;;20940:3;;21131:6;21126:3;21122:16;21115:23;;20641:507;-1:-1:-1;21164:3:40;;20376:797;-1:-1:-1;;;;;20376:797:40:o;21178:298::-;21363:4;21355:6;21351:17;21340:9;21333:36;21405:2;21400;21389:9;21385:18;21378:30;21314:4;21425:45;21466:2;21455:9;21451:18;21443:6;21425:45;:::i;22044:521::-;22121:4;22127:6;22187:11;22174:25;22281:2;22277:7;22266:8;22250:14;22246:29;22242:43;22222:18;22218:68;22208:96;;22300:1;22297;22290:12;22208:96;22327:33;;22379:20;;;-1:-1:-1;;;;;;22411:30:40;;22408:50;;;22454:1;22451;22444:12;22408:50;22487:4;22475:17;;-1:-1:-1;22518:14:40;22514:27;;;22504:38;;22501:58;;;22555:1;22552;22545:12;22570:127;22631:10;22626:3;22622:20;22619:1;22612:31;22662:4;22659:1;22652:15;22686:4;22683:1;22676:15;22702:121;22787:10;22780:5;22776:22;22769:5;22766:33;22756:61;;22813:1;22810;22803:12;22828:245;22886:6;22939:2;22927:9;22918:7;22914:23;22910:32;22907:52;;;22955:1;22952;22945:12;22907:52;22994:9;22981:23;23013:30;23037:5;23013:30;:::i;23078:138::-;23157:13;;23179:31;23157:13;23179:31;:::i;23221:1009::-;23319:6;23379:3;23367:9;23358:7;23354:23;23350:33;23395:2;23392:22;;;23410:1;23407;23400:12;23392:22;-1:-1:-1;23479:2:40;23473:9;23521:3;23509:16;;-1:-1:-1;;;;;23540:34:40;;23576:22;;;23537:62;23534:88;;;23602:18;;:::i;:::-;23638:2;23631:22;23675:16;;23700:31;23675:16;23700:31;:::i;:::-;23740:21;;23827:2;23812:18;;;23806:25;23847:15;;;23840:32;23905:48;23949:2;23934:18;;23905:48;:::i;:::-;23900:2;23892:6;23888:15;23881:73;23999:2;23988:9;23984:18;23978:25;24012:33;24037:7;24012:33;:::i;:::-;24073:2;24061:15;;24054:32;24152:3;24137:19;;;24131:26;24173:16;;;24166:33;;;;-1:-1:-1;24065:6:40;23221:1009;-1:-1:-1;23221:1009:40:o;25424:267::-;25513:6;25508:3;25501:19;25565:6;25558:5;25551:4;25546:3;25542:14;25529:43;-1:-1:-1;25617:1:40;25592:16;;;25610:4;25588:27;;;25581:38;;;;25673:2;25652:15;;;-1:-1:-1;;25648:29:40;25639:39;;;25635:50;;25424:267::o;25696:247::-;25855:2;25844:9;25837:21;25818:4;25875:62;25933:2;25922:9;25918:18;25910:6;25902;25875:62;:::i;25948:1198::-;-1:-1:-1;;;;;26067:3:40;26064:27;26061:53;;;26094:18;;:::i;:::-;26123:94;26213:3;26173:38;26205:4;26199:11;26173:38;:::i;:::-;26167:4;26123:94;:::i;:::-;26243:1;26268:2;26263:3;26260:11;26285:1;26280:608;;;;26932:1;26949:3;26946:93;;;-1:-1:-1;27005:19:40;;;26992:33;26946:93;-1:-1:-1;;19029:1:40;19025:11;;;19021:24;19017:29;19007:40;19053:1;19049:11;;;19004:57;27052:78;;26253:887;;26280:608;18325:1;18318:14;;;18362:4;18349:18;;-1:-1:-1;;26316:17:40;;;26431:229;26445:7;26442:1;26439:14;26431:229;;;26534:19;;;26521:33;26506:49;;26641:4;26626:20;;;;26594:1;26582:14;;;;26461:12;26431:229;;;26435:3;26688;26679:7;26676:16;26673:159;;;26812:1;26808:6;26802:3;26796;26793:1;26789:11;26785:21;26781:34;26777:39;26764:9;26759:3;26755:19;26742:33;26738:79;26730:6;26723:95;26673:159;;;26875:1;26869:3;26866:1;26862:11;26858:19;26852:4;26845:33;26253:887;;25948:1198;;;:::o;27151:1039::-;27364:2;27353:9;27346:21;27327:4;27402:6;27389:20;27418:30;27442:5;27418:30;:::i;:::-;27495:10;27484:22;27479:2;27464:18;;;27457:50;;;;27565:15;;27552:29;27612:2;27597:18;;;27590:35;;;;27673:15;;27660:29;27740:14;27736:27;;;-1:-1:-1;;27732:41:40;27708:66;;27698:94;;27788:1;27785;27778:12;27698:94;27816:31;;27928:2;27915:16;;;27870:21;-1:-1:-1;;;;;27943:30:40;;27940:50;;;27986:1;27983;27976:12;27940:50;28035:6;28019:14;28015:27;28006:7;28002:41;27999:61;;;28056:1;28053;28046:12;27999:61;28098:4;28091;28080:9;28076:20;28069:34;28120:64;28179:3;28168:9;28164:19;28156:6;28147:7;28120:64;:::i;28195:136::-;28273:13;;28295:30;28273:13;28295:30;:::i;28336:189::-;28402:4;-1:-1:-1;;;;;28427:6:40;28424:30;28421:56;;;28457:18;;:::i;:::-;-1:-1:-1;28502:1:40;28498:14;28514:4;28494:25;;28336:189::o;28530:1228::-;28601:5;28654:3;28647:4;28639:6;28635:17;28631:27;28621:55;;28672:1;28669;28662:12;28621:55;28705:6;28699:13;28732:70;28748:53;28794:6;28748:53;:::i;28732:70::-;28826:3;28850:6;28845:3;28838:19;28882:4;28877:3;28873:14;28866:21;;28943:4;28933:6;28930:1;28926:14;28918:6;28914:27;28910:38;28896:52;;28971:3;28963:6;28960:15;28957:35;;;28988:1;28985;28978:12;28957:35;29024:4;29016:6;29012:17;29038:689;29054:6;29049:3;29046:15;29038:689;;;29132:4;29126:3;29121;29117:13;29113:24;29110:44;;;29150:1;29147;29140:12;29110:44;29180:22;;:::i;:::-;29255:10;;29278:22;;29368:4;29359:14;;;29353:21;29394:16;;;29387:33;29488:2;29479:12;;;29473:19;29512:14;;;29505:31;29604:2;29595:12;;;29589:19;29628:14;;;29621:31;29665:18;;;29703:14;;;;;29080:4;29071:14;29038:689;;;-1:-1:-1;29745:7:40;28530:1228;-1:-1:-1;;;;;28530:1228:40:o;29763:873::-;29843:5;29896:3;29889:4;29881:6;29877:17;29873:27;29863:55;;29914:1;29911;29904:12;29863:55;29947:6;29941:13;29974:70;29990:53;30036:6;29990:53;:::i;29974:70::-;30068:3;30092:6;30087:3;30080:19;30124:4;30119:3;30115:14;30108:21;;30185:4;30175:6;30172:1;30168:14;30160:6;30156:27;30152:38;30138:52;;30213:3;30205:6;30202:15;30199:35;;;30230:1;30227;30220:12;30199:35;30266:4;30258:6;30254:17;30280:325;30296:6;30291:3;30288:15;30280:325;;;30377:3;30371:10;-1:-1:-1;;;;;30400:11:40;30397:35;30394:55;;;30445:1;30442;30435:12;30394:55;30474:86;30556:3;30549:4;30535:11;30527:6;30523:24;30519:35;30474:86;:::i;:::-;30462:99;;-1:-1:-1;30590:4:40;30581:14;;;;30313;30280:325;;30641:1514;30753:6;30806:2;30794:9;30785:7;30781:23;30777:32;30774:52;;;30822:1;30819;30812:12;30774:52;30855:9;30849:16;-1:-1:-1;;;;;30880:6:40;30877:30;30874:50;;;30920:1;30917;30910:12;30874:50;30943:22;;30999:6;30981:16;;;30977:29;30974:49;;;31019:1;31016;31009:12;30974:49;31045:22;;:::i;:::-;31090:33;31120:2;31090:33;:::i;:::-;31076:48;;31183:2;31175:11;;;31169:18;31203:14;;;31196:31;31259:41;31296:2;31288:11;;31259:41;:::i;:::-;31254:2;31247:5;31243:14;31236:65;31333:41;31370:2;31366;31362:11;31333:41;:::i;:::-;31328:2;31317:14;;31310:65;31434:3;31426:12;;;31420:19;31455:15;;;31448:32;31519:3;31511:12;;31505:19;-1:-1:-1;;;;;31536:32:40;;31533:52;;;31581:1;31578;31571:12;31533:52;31618:73;31683:7;31672:8;31668:2;31664:17;31618:73;:::i;:::-;31612:3;31605:5;31601:15;31594:98;;31731:3;31727:2;31723:12;31717:19;-1:-1:-1;;;;;31751:8:40;31748:32;31745:52;;;31793:1;31790;31783:12;31745:52;31830:73;31895:7;31884:8;31880:2;31876:17;31830:73;:::i;:::-;31824:3;31817:5;31813:15;31806:98;;31943:3;31939:2;31935:12;31929:19;-1:-1:-1;;;;;31963:8:40;31960:32;31957:52;;;32005:1;32002;31995:12;31957:52;32042:82;32116:7;32105:8;32101:2;32097:17;32042:82;:::i;:::-;32036:3;32025:15;;32018:107;-1:-1:-1;32029:5:40;30641:1514;-1:-1:-1;;;;30641:1514:40:o",
    "linkReferences": {},
    "immutableReferences": { "39752": [{ "start": 2990, "length": 32 }] }
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "batchBurn(address[],uint256[])": "4a6cc677",
    "batchMint(address[],uint256[])": "68573107",
    "batchTransfer(address[],uint256[])": "88d695b2",
    "burn(address,uint256)": "9dc29fac",
    "cancel(bytes32)": "c4d252f5",
    "confirm(bytes32)": "797af627",
    "decimals()": "313ce567",
    "decode7683FillInstruction(bytes)": "25db3796",
    "decode7683OrderData(bytes)": "5788015a",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "fill(bytes32,bytes,bytes)": "82e2c43f",
    "increaseAllowance(address,uint256)": "39509351",
    "init(address,string,string,uint8)": "3bf73798",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "open((uint32,bytes32,bytes))": "e917a962",
    "owner()": "8da5cb5b",
    "pause()": "8456cb59",
    "paused()": "5c975abb",
    "pendingOrders(bytes32)": "7b55766f",
    "renounceOwnership()": "715018a6",
    "resolve((uint32,bytes32,bytes))": "41b477dd",
    "setName(string)": "c47f0027",
    "setSymbol(string)": "b84c8246",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "unpause()": "3f4ba83a",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"OrderNotPending\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"filler\",\"type\":\"address\"}],\"name\":\"UnauthorizedFiller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongOrderType\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"Cancel\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"Confirm\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"Fill\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"openDeadline\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"token\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct Output[]\",\"name\":\"maxSpent\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"token\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct Output[]\",\"name\":\"minReceived\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"destinationChainId\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"destinationSettler\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"originData\",\"type\":\"bytes\"}],\"internalType\":\"struct FillInstruction[]\",\"name\":\"fillInstructions\",\"type\":\"tuple[]\"}],\"indexed\":false,\"internalType\":\"struct ResolvedCrossChainOrder\",\"name\":\"resolvedOrder\",\"type\":\"tuple\"}],\"name\":\"Open\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"_newName\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"_newSymbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"_newDecimals\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_newVersion\",\"type\":\"string\"}],\"name\":\"UpdatedTokenInformation\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_userAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_toList\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_toList\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"confirm\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"fillInstruction\",\"type\":\"bytes\"}],\"name\":\"decode7683FillInstruction\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"destinationChainId\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"destinationSettler\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"originData\",\"type\":\"bytes\"}],\"internalType\":\"struct FillInstruction\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"orderData\",\"type\":\"bytes\"}],\"name\":\"decode7683OrderData\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"destinationChainId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeValue\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenStorage.OrderData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"originData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"fillerData\",\"type\":\"bytes\"}],\"name\":\"fill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"orderDataType\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"orderData\",\"type\":\"bytes\"}],\"internalType\":\"struct OnchainCrossChainOrder\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"open\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"pendingOrders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"destinationChainId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeValue\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenStorage.OrderData\",\"name\":\"orderData\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"orderDataType\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"orderData\",\"type\":\"bytes\"}],\"internalType\":\"struct OnchainCrossChainOrder\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"resolve\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"openDeadline\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"token\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct Output[]\",\"name\":\"maxSpent\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"token\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct Output[]\",\"name\":\"minReceived\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"destinationChainId\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"destinationSettler\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"originData\",\"type\":\"bytes\"}],\"internalType\":\"struct FillInstruction[]\",\"name\":\"fillInstructions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct ResolvedCrossChainOrder\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"setName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"setSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Open(bytes32,(address,uint256,uint32,uint32,bytes32,(bytes32,uint256,bytes32,uint256)[],(bytes32,uint256,bytes32,uint256)[],(uint64,bytes32,bytes)[]))\":{\"params\":{\"orderId\":\"a unique order identifier within this settlement system\",\"resolvedOrder\":\"resolved order that would be returned by resolve if called instead of Open\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"batchBurn(address[],uint256[])\":{\"details\":\"See {IToken-batchBurn}.\"},\"batchMint(address[],uint256[])\":{\"details\":\"See {IToken-batchMint}.\"},\"batchTransfer(address[],uint256[])\":{\"details\":\"See {IToken-batchTransfer}.\"},\"burn(address,uint256)\":{\"details\":\"See {IToken-burn}.\"},\"decimals()\":{\"details\":\"See {IInteropToken-decimals}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"See {ERC20-decreaseAllowance}.\"},\"fill(bytes32,bytes,bytes)\":{\"params\":{\"fillerData\":\"Data provided by the filler to inform the fill or express their preferences\",\"orderId\":\"Unique order identifier for this order\",\"originData\":\"Data emitted on the origin to parameterize the fill\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"See {ERC20-increaseAllowance}.\"},\"init(address,string,string,uint8)\":{\"details\":\"this initiates the token contract  msg.sender is set automatically as the owner of the smart contract\",\"params\":{\"_decimals\":\"the decimals of the token  emits an `UpdatedTokenInformation` event\",\"_name\":\"the name of the token\",\"_symbol\":\"the symbol of the token\"}},\"mint(address,uint256)\":{\"details\":\"See {IToken-mint}.\"},\"name()\":{\"details\":\"See {IInteropToken-name}.\"},\"open((uint32,bytes32,bytes))\":{\"details\":\"To be called by the userThis method must emit the Open event\",\"params\":{\"order\":\"The OnchainCrossChainOrder definition\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"See {IToken-pause}.\"},\"paused()\":{\"details\":\"See {IInteropToken-paused}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"resolve((uint32,bytes32,bytes))\":{\"details\":\"Intended to improve standardized integration of various order types and settlement contracts\",\"params\":{\"order\":\"The OnchainCrossChainOrder definition\"},\"returns\":{\"_0\":\"ResolvedCrossChainOrder hydrated order data including the inputs and outputs of the order\"}},\"setName(string)\":{\"details\":\"See {IToken-setName}.\"},\"setSymbol(string)\":{\"details\":\"See {IToken-setSymbol}.\"},\"symbol()\":{\"details\":\"See {IInteropToken-symbol}.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"params\":{\"_amount\":\"The number of tokens to transfer\",\"_to\":\"The address of the receiver\"},\"returns\":{\"_0\":\"`true` if successful and revert if unsuccessful\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"_amount\":\"The number of tokens to transfer\",\"_from\":\"The address of the sender\",\"_to\":\"The address of the receiver\"},\"returns\":{\"_0\":\"`true` if successful and revert if unsuccessful\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"See {IToken-unpause}.\"},\"version()\":{\"details\":\"See {IInteropToken-version}.\"}},\"version\":1},\"userdoc\":{\"events\":{\"Open(bytes32,(address,uint256,uint32,uint32,bytes32,(bytes32,uint256,bytes32,uint256)[],(bytes32,uint256,bytes32,uint256)[],(uint64,bytes32,bytes)[]))\":{\"notice\":\"Signals that an order has been opened\"},\"Paused(address)\":{\"notice\":\"this event is emitted when the token is paused  the event is emitted by the pause function  `_userAddress` is the address of the wallet that called the pause function\"},\"Unpaused(address)\":{\"notice\":\"this event is emitted when the token is unpaused  the event is emitted by the unpause function  `_userAddress` is the address of the wallet that called the unpause function\"},\"UpdatedTokenInformation(string,string,uint8,string)\":{\"notice\":\"this event is emitted when the token information is updated.  the event is emitted by the token init function and by the setTokenInformation function  `_newName` is the name of the token  `_newSymbol` is the symbol of the token  `_newDecimals` is the decimals of the token  `_newVersion` is the version of the token, current version is 3.0\"}},\"kind\":\"user\",\"methods\":{\"fill(bytes32,bytes,bytes)\":{\"notice\":\"Fills a single leg of a particular order on the destination chain\"},\"open((uint32,bytes32,bytes))\":{\"notice\":\"Opens a cross-chain order\"},\"resolve((uint32,bytes32,bytes))\":{\"notice\":\"Resolves a specific OnchainCrossChainOrder into a generic ResolvedCrossChainOrder\"},\"transfer(address,uint256)\":{\"notice\":\"ERC-20 overridden function that include logic to check for trade validity.  Require that the msg.sender and to addresses are not frozen.  Require that the value should not exceed available balance .  Require that the to address is a verified address\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"ERC-20 overridden function that include logic to check for trade validity.  Require that the from and to addresses are not frozen.  Require that the value should not exceed available balance .  Require that the to address is a verified address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/InteropToken.sol\":\"InteropToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"src/InteropToken.sol\":{\"keccak256\":\"0x2937a0f397b723cdf09277e4f3304a2a0443cdf26105561eadfdc5176462775e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6513c7b07d47aa6dcaa86bcef0f10a41ef022d515be5f8b11519ac14e811037e\",\"dweb:/ipfs/QmSFoR1kqRSpmdngB3B3rPb6eG4m6uosPUY7URKtbUfZbH\"]},\"src/TokenStorage.sol\":{\"keccak256\":\"0x88da097cd672580a2b5181879c632e2df0de1d15b077b4e2217d7d2d2a414386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd92f86d8039bea6e2d5e84448420aeb7bb791633f91adb0d7d78e221f206acd\",\"dweb:/ipfs/QmfSf6uGD1vnRazcFYczyvYbnPCQEj1mmZsDvg9v8Fu7wp\"]},\"src/interface/IERC7683.sol\":{\"keccak256\":\"0xff5b4316be054a17fb432050abfd80ef9683e77e3d0a90e5514d29b21ed79b13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b103c62ec0ba142838680bd450aa57eb6e63c270b1b89aea5dd50a1e62ba145\",\"dweb:/ipfs/QmNV75myS9i6ZVD9ihVnXnSjMmnox5WYnh3uQ9JNmiqpdN\"]},\"src/interface/IInteropToken.sol\":{\"keccak256\":\"0x4059f6c0b6efdf119fcdea69c8f38992beb65d7df8034200e8454a6a1701748f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2d49ec13afb4d4be63b41c436e17b30b94b9db70e6ac835d8b7311ab1211c8d\",\"dweb:/ipfs/QmNmqapmnRBtm3xwJpYFfF6kUhTBgv4abJnaqigrA1soKM\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.28+commit.7893614a" },
    "language": "Solidity",
    "output": {
      "abi": [
        { "inputs": [], "type": "error", "name": "InvalidInitialization" },
        { "inputs": [], "type": "error", "name": "NotInitializing" },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "orderId", "type": "bytes32" }
          ],
          "type": "error",
          "name": "OrderNotPending"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" }
          ],
          "type": "error",
          "name": "OwnableInvalidOwner"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "type": "error",
          "name": "OwnableUnauthorizedAccount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ReentrancyGuardReentrantCall"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "sender", "type": "address" },
            { "internalType": "address", "name": "filler", "type": "address" }
          ],
          "type": "error",
          "name": "UnauthorizedFiller"
        },
        { "inputs": [], "type": "error", "name": "WrongOrderType" },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "orderId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Cancel",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "orderId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Confirm",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "orderId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Fill",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "version",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "orderId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "struct ResolvedCrossChainOrder",
              "name": "resolvedOrder",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "originChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "openDeadline",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "fillDeadline",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "orderId",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct Output[]",
                  "name": "maxSpent",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "token",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "recipient",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "chainId",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct Output[]",
                  "name": "minReceived",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "token",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "recipient",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "chainId",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct FillInstruction[]",
                  "name": "fillInstructions",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint64",
                      "name": "destinationChainId",
                      "type": "uint64"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "destinationSettler",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes",
                      "name": "originData",
                      "type": "bytes"
                    }
                  ]
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Open",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_userAddress",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_userAddress",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_newName",
              "type": "string",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "_newSymbol",
              "type": "string",
              "indexed": true
            },
            {
              "internalType": "uint8",
              "name": "_newDecimals",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "_newVersion",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedTokenInformation",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_owner", "type": "address" },
            { "internalType": "address", "name": "_spender", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_spender",
              "type": "address"
            },
            { "internalType": "uint256", "name": "_amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_userAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_userAddresses",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "_amounts",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchBurn"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_toList",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "_amounts",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchMint"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_toList",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "_amounts",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchTransfer"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_userAddress",
              "type": "address"
            },
            { "internalType": "uint256", "name": "_amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "orderId", "type": "bytes32" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancel"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "orderId", "type": "bytes32" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "confirm"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "fillInstruction",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "decode7683FillInstruction",
          "outputs": [
            {
              "internalType": "struct FillInstruction",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint64",
                  "name": "destinationChainId",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "destinationSettler",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "originData",
                  "type": "bytes"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "orderData", "type": "bytes" }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "decode7683OrderData",
          "outputs": [
            {
              "internalType": "struct TokenStorage.OrderData",
              "name": "",
              "type": "tuple",
              "components": [
                { "internalType": "address", "name": "to", "type": "address" },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint64",
                  "name": "destinationChainId",
                  "type": "uint64"
                },
                {
                  "internalType": "address",
                  "name": "feeToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "feeValue",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "orderId", "type": "bytes32" },
            { "internalType": "bytes", "name": "originData", "type": "bytes" },
            { "internalType": "bytes", "name": "fillerData", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "fill"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_initialOwner",
              "type": "address"
            },
            { "internalType": "string", "name": "_name", "type": "string" },
            { "internalType": "string", "name": "_symbol", "type": "string" },
            { "internalType": "uint8", "name": "_decimals", "type": "uint8" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "init"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_to", "type": "address" },
            { "internalType": "uint256", "name": "_amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OnchainCrossChainOrder",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "fillDeadline",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "orderDataType",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "orderData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "open"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingOrders",
          "outputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            {
              "internalType": "struct TokenStorage.OrderData",
              "name": "orderData",
              "type": "tuple",
              "components": [
                { "internalType": "address", "name": "to", "type": "address" },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint64",
                  "name": "destinationChainId",
                  "type": "uint64"
                },
                {
                  "internalType": "address",
                  "name": "feeToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "feeValue",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "struct OnchainCrossChainOrder",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "fillDeadline",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "orderDataType",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "orderData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "resolve",
          "outputs": [
            {
              "internalType": "struct ResolvedCrossChainOrder",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "originChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "openDeadline",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "fillDeadline",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "orderId",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct Output[]",
                  "name": "maxSpent",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "token",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "recipient",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "chainId",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct Output[]",
                  "name": "minReceived",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "token",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "recipient",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "chainId",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct FillInstruction[]",
                  "name": "fillInstructions",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint64",
                      "name": "destinationChainId",
                      "type": "uint64"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "destinationSettler",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes",
                      "name": "originData",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "string", "name": "_name", "type": "string" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setName"
        },
        {
          "inputs": [
            { "internalType": "string", "name": "_symbol", "type": "string" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSymbol"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_to", "type": "address" },
            { "internalType": "uint256", "name": "_amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_from", "type": "address" },
            { "internalType": "address", "name": "_to", "type": "address" },
            { "internalType": "uint256", "name": "_amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "newOwner", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "version",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": { "details": "See {IERC20-approve}." },
          "balanceOf(address)": { "details": "See {IERC20-balanceOf}." },
          "batchBurn(address[],uint256[])": {
            "details": "See {IToken-batchBurn}."
          },
          "batchMint(address[],uint256[])": {
            "details": "See {IToken-batchMint}."
          },
          "batchTransfer(address[],uint256[])": {
            "details": "See {IToken-batchTransfer}."
          },
          "burn(address,uint256)": { "details": "See {IToken-burn}." },
          "decimals()": { "details": "See {IInteropToken-decimals}." },
          "decreaseAllowance(address,uint256)": {
            "details": "See {ERC20-decreaseAllowance}."
          },
          "fill(bytes32,bytes,bytes)": {
            "params": {
              "fillerData": "Data provided by the filler to inform the fill or express their preferences",
              "orderId": "Unique order identifier for this order",
              "originData": "Data emitted on the origin to parameterize the fill"
            }
          },
          "increaseAllowance(address,uint256)": {
            "details": "See {ERC20-increaseAllowance}."
          },
          "init(address,string,string,uint8)": {
            "details": "this initiates the token contract  msg.sender is set automatically as the owner of the smart contract",
            "params": {
              "_decimals": "the decimals of the token  emits an `UpdatedTokenInformation` event",
              "_name": "the name of the token",
              "_symbol": "the symbol of the token"
            }
          },
          "mint(address,uint256)": { "details": "See {IToken-mint}." },
          "name()": { "details": "See {IInteropToken-name}." },
          "open((uint32,bytes32,bytes))": {
            "details": "To be called by the userThis method must emit the Open event",
            "params": { "order": "The OnchainCrossChainOrder definition" }
          },
          "owner()": { "details": "Returns the address of the current owner." },
          "pause()": { "details": "See {IToken-pause}." },
          "paused()": { "details": "See {IInteropToken-paused}." },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "resolve((uint32,bytes32,bytes))": {
            "details": "Intended to improve standardized integration of various order types and settlement contracts",
            "params": { "order": "The OnchainCrossChainOrder definition" },
            "returns": {
              "_0": "ResolvedCrossChainOrder hydrated order data including the inputs and outputs of the order"
            }
          },
          "setName(string)": { "details": "See {IToken-setName}." },
          "setSymbol(string)": { "details": "See {IToken-setSymbol}." },
          "symbol()": { "details": "See {IInteropToken-symbol}." },
          "totalSupply()": { "details": "See {IERC20-totalSupply}." },
          "transfer(address,uint256)": {
            "params": {
              "_amount": "The number of tokens to transfer",
              "_to": "The address of the receiver"
            },
            "returns": {
              "_0": "`true` if successful and revert if unsuccessful"
            }
          },
          "transferFrom(address,address,uint256)": {
            "params": {
              "_amount": "The number of tokens to transfer",
              "_from": "The address of the sender",
              "_to": "The address of the receiver"
            },
            "returns": {
              "_0": "`true` if successful and revert if unsuccessful"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "unpause()": { "details": "See {IToken-unpause}." },
          "version()": { "details": "See {IInteropToken-version}." }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "fill(bytes32,bytes,bytes)": {
            "notice": "Fills a single leg of a particular order on the destination chain"
          },
          "open((uint32,bytes32,bytes))": {
            "notice": "Opens a cross-chain order"
          },
          "resolve((uint32,bytes32,bytes))": {
            "notice": "Resolves a specific OnchainCrossChainOrder into a generic ResolvedCrossChainOrder"
          },
          "transfer(address,uint256)": {
            "notice": "ERC-20 overridden function that include logic to check for trade validity.  Require that the msg.sender and to addresses are not frozen.  Require that the value should not exceed available balance .  Require that the to address is a verified address"
          },
          "transferFrom(address,address,uint256)": {
            "notice": "ERC-20 overridden function that include logic to check for trade validity.  Require that the from and to addresses are not frozen.  Require that the value should not exceed available balance .  Require that the to address is a verified address"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "src/InteropToken.sol": "InteropToken" },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a",
        "urls": [
          "bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6",
          "dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
        "urls": [
          "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
          "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
        "urls": [
          "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
          "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b",
        "urls": [
          "bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b",
          "dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368",
        "urls": [
          "bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171",
          "dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7",
        "urls": [
          "bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db",
          "dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330",
        "urls": [
          "bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf",
          "dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol": {
        "keccak256": "0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3",
        "urls": [
          "bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a",
          "dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA"
        ],
        "license": "MIT"
      },
      "src/InteropToken.sol": {
        "keccak256": "0x2937a0f397b723cdf09277e4f3304a2a0443cdf26105561eadfdc5176462775e",
        "urls": [
          "bzz-raw://6513c7b07d47aa6dcaa86bcef0f10a41ef022d515be5f8b11519ac14e811037e",
          "dweb:/ipfs/QmSFoR1kqRSpmdngB3B3rPb6eG4m6uosPUY7URKtbUfZbH"
        ],
        "license": "MIT"
      },
      "src/TokenStorage.sol": {
        "keccak256": "0x88da097cd672580a2b5181879c632e2df0de1d15b077b4e2217d7d2d2a414386",
        "urls": [
          "bzz-raw://dd92f86d8039bea6e2d5e84448420aeb7bb791633f91adb0d7d78e221f206acd",
          "dweb:/ipfs/QmfSf6uGD1vnRazcFYczyvYbnPCQEj1mmZsDvg9v8Fu7wp"
        ],
        "license": "MIT"
      },
      "src/interface/IERC7683.sol": {
        "keccak256": "0xff5b4316be054a17fb432050abfd80ef9683e77e3d0a90e5514d29b21ed79b13",
        "urls": [
          "bzz-raw://1b103c62ec0ba142838680bd450aa57eb6e63c270b1b89aea5dd50a1e62ba145",
          "dweb:/ipfs/QmNV75myS9i6ZVD9ihVnXnSjMmnox5WYnh3uQ9JNmiqpdN"
        ],
        "license": "MIT"
      },
      "src/interface/IInteropToken.sol": {
        "keccak256": "0x4059f6c0b6efdf119fcdea69c8f38992beb65d7df8034200e8454a6a1701748f",
        "urls": [
          "bzz-raw://c2d49ec13afb4d4be63b41c436e17b30b94b9db70e6ac835d8b7311ab1211c8d",
          "dweb:/ipfs/QmNmqapmnRBtm3xwJpYFfF6kUhTBgv4abJnaqigrA1soKM"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 31
}
